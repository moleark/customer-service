{"version":3,"sources":["webUser/VPendingAuditUserList.tsx","tvs/common.tsx","tools/productImage.tsx","tvs/product.tsx","tvs/index.tsx","tvs/webuser.tsx","tvs/customer.tsx","configuration.ts","webUser/VPendingAuditUser.tsx","webUser/VPendingAuditUserRefuse.tsx","CBase.ts","webUser/CWebUser.tsx","me/EditMeInfo.tsx","me/VMe.tsx","me/CMe.tsx","order/VPendingOrderList.tsx","order/VOrderDetail.tsx","order/COrder.tsx","VMain.tsx","product/VProductView.tsx","product/VChemicalInfo.tsx","product/CProduct.tsx","currentUser.ts","CCustomerServiceApp.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["VPendingAuditUserList","renderPendingUser","item","webUser","right","name","className","tv","showUserDetail","user","a","controller","openPendingAuditUserDetail","content","observer","pendingUsers","header","items","render","onClick","param","this","getPendingUsers","VPage","tvAddress","values","country","province","city","county","undefined","tvCountry","chineseName","imagePath","altimagePath","ProductImage","props","style","chemicalId","src","substr","altImage","caption","value","tvs","webuser","firstName","salutation","organizationName","departmentName","common","address","currency","customer","contact","mobile","addressString","invoiceInfo","title","taxNo","invoiceType","description","product","productx","brand","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","packx","radiox","radioy","unit","appConfig","GLOABLE","CHINA","CHINESE","SALESREGION_CN","TIPDISPLAYTIME","schema","type","required","uiSchema","id","visible","widget","label","placeholder","rules","length","teacher","submit","VPendingAuditUser","form","data","pendingOrderList","auditPendingUser","buttonClick","onFormButtonClick","context","ret","tips","role","leftseconds","h","setInterval","setTimeout","clearInterval","backPage","page","currentAuditingUser","webUserContact","openAuditRefuse","contactInfoUi","telephone","email","href","footer","left","ref","v","formData","onButtonClick","renderPendingOrders","openPage","observable","VPendingAuditUserRefuse","auditPendingUserRefuse","closePage","reason","list","comments","map","CUqBase","_uqs","CBase","CWebUser","CSub","tab","renderView","uqs","AuditPendingUserRefuseReason","search","reasons","openVPage","webUserId","cOrder","cApp","renderPendingOrder","getPendingAuditUser","table","webUserBox","WebUser","load","WebUserContact","obj","customerNo","getCustomerByNo","customerBox","customerId","auditPendingOrder","reasonData","currentAuditingUserId","EditMeInfo","nick","icon","onItemChanged","itemSchema","newValue","preValue","userApi","userSetProp","nav","saveLocalUser","onWebUserChanged","webUserData","changeWebUser","onWebUserContactChanged","webUserContactData","changeWebUserContact","currentUser","gender","fax","zipCode","VMe","changePassword","meInfo","userSpan","String","showLogout","rows","aboutRows","component","iconClass","text","push","showLogin","size","logOutRows","bk","exit","CMe","VPendingOrderList","renderOrder","order","index","openOrderDetail","no","date","pendingOrders","none","View","VOrderDetail","packsRow","pack","quantity","price","key","parseFloat","toFixed","renderOrderItem","orderItem","packs","renderOrderItemProduct","p","couponUI","offsetUI","remittedUI","freightFeeUI","freightFeeRemittedUI","brief","orderItems","shippingContact","invoiceContact","amount","couponOffsetAmount","couponRemitted","freightFee","freightFeeRemitted","invoiceTypeUI","invoiceInfoUI","invoiceTemplate","COrder","orderId","Order","getSheet","orderitems","orderItemsGrouped","orderItemGroupByProduct","cProduct","renderCartProduct","userSheets","pendingAuditOrders","i","flow","action","packItems","result","cd","cpi","find","e","packRow","color","selected","VMain","cWebUser","cMe","faceTabs","notify","TabCaptionComponent","tabs","VCartProuductView","descriptionC","renderChemicalInfo","productPropItem","renderBrand","VChemicalInfo","productId","chemicalInfo","chemicalInfoContainer","getChemicalInfo","CProduct","ProductChemical","captionClass","capClass","classNames","valClass","guest","token","_user","webUserSettings","setUser","loadWebUser","currentCustomer","WebUserSetting","WebUserCustomer","Customer","init","WebUserContacts","contactId","add","arr1","del","saveDefaultSettings","invoiceTypeId","invoiceInfoId","save","computed","customerSettings","CustomerContacts","CustomerSetting","setDefaultSettings","CCustomerServiceApp","topKey","currentSalesRegion","currentLanguage","SalesRegion","Language","newC","showMain","initTabName","CAppBase","appName","version","setSettings","App","onLogined","start","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71545a72.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { CWebUser } from './CWebUser';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page, List, LMR, FA, tv } from 'tonva';\r\n\r\nexport class VPendingAuditUserList extends VPage<CWebUser> {\r\n\r\n    async open(param?: any) {\r\n\r\n    }\r\n\r\n    render(param?: any): JSX.Element {\r\n        this.controller.getPendingUsers();\r\n        return <this.content />\r\n    }\r\n\r\n    private renderPendingUser = (item: any) => {\r\n        let { webUser } = item;\r\n        let right = <FA name=\"chevron-right\" className=\"chevron-right align-self-center\"></FA>\r\n        return <LMR right={right} className=\"p-3\">\r\n            {tv(webUser)}\r\n        </LMR>\r\n    }\r\n\r\n    private showUserDetail = async (user: any) => {\r\n        await this.controller.openPendingAuditUserDetail(user);\r\n    }\r\n\r\n    private content = observer(() => {\r\n\r\n        let { pendingUsers } = this.controller;\r\n        return <Page header=\"待审核客户\">\r\n            <List items={pendingUsers} item={{ render: this.renderPendingUser, onClick: this.showUserDetail }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { tv } from 'tonva';\r\n\r\nexport const tvAddress = (values: any) => {\r\n    let { country, province, city, county } = values;\r\n    return <>\r\n        {tv(country)}{tv(province, undefined, undefined, () => <></>)}{tv(city, undefined, undefined, () => <></>)}{tv(county, undefined, undefined, () => <></>)}\r\n    </>\r\n}\r\n\r\nexport const tvCountry = (values: any) => {\r\n    return <> {values.chineseName} </>;\r\n}\r\n\r\nexport const tvCurrency = (values: any) => {\r\n    return <> {values.name} </>;\r\n}\r\n\r\nexport const common = {\r\n    address: tvAddress,\r\n    country: tvCountry,\r\n    province: tvCountry,\r\n    city: tvCountry,\r\n    county: tvCountry,\r\n    currency: tvCurrency,\r\n};\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')}\r\n        style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport const tvProduct = (values: any) => {\r\n    let product = values;\r\n    let { brand, description, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n    return <div className=\"row d-flex\">\r\n        <div className=\"col-12\">\r\n            <div className=\"row py-2\">\r\n                <div className=\"col-12\"><strong>{description}</strong></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {item('CAS', CAS)}\r\n                        {item('纯度', purity)}\r\n                        {item('分子式', molecularFomula)}\r\n                        {item('分子量', molecularWeight)}\r\n                        {item('产品编号', origin)}\r\n                        {tv(brand, (values: any) => <>{item(\"品牌\", values.name)}</>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst tvPackx = (values: any) => {\r\n    let { radiox, radioy, unit } = values;\r\n    if (radiox !== 1) return <>{radiox} * {radioy}{unit}</>;\r\n    return <>{radioy}{unit}</>;\r\n}\r\n\r\nfunction item(caption: string, value: any) {\r\n    if (value === null || value === undefined) return null;\r\n    return <>\r\n        <div className=\"col-4 text-muted pr-0\">{caption}:</div>\r\n        <div className=\"col-8\">{value}</div>\r\n    </>;\r\n}\r\n\r\nexport const product = {\r\n    productx: tvProduct,\r\n    packx: tvPackx\r\n}\r\n","import { TVs } from 'tonva';\r\nimport { webuser } from './webuser';\r\nimport { common } from './common';\r\nimport { customer } from './customer';\r\nimport { product } from './product';\r\n\r\nexport const tvs: TVs = {\r\n    webuser: webuser,\r\n    common: common,\r\n    customer: customer,\r\n    product: product\r\n}","import * as React from 'react';\r\n\r\nexport const tvWebUser = (value: any) => {\r\n    let { firstName, salutation, organizationName, departmentName } = value;\r\n    return <>\r\n        <div className=\"mr-3\"><strong>{firstName}</strong> <span className=\"small\">{salutation}</span></div>\r\n        <div className=\"small text-muted\">{organizationName} &nbsp;{departmentName}</div>\r\n    </>\r\n}\r\n\r\nexport const webuser = {\r\n    webuser: tvWebUser\r\n}","import * as React from 'react';\r\nimport { tv } from 'tonva';\r\nimport { tvAddress, tvCountry } from './common';\r\n\r\nexport const tvContact = (values: any) => {\r\n    let { name, mobile, organizationName, address, addressString } = values;\r\n    return <div className=\"flex-grow-1\">\r\n        <b>\r\n            {name}\r\n        </b>\r\n        &nbsp; {mobile} &nbsp; {organizationName}<br />\r\n        <small>{tv(address)} {addressString}</small>\r\n    </div>\r\n}\r\n\r\nexport const tvInvoiceType = (values: any) => {\r\n    let { description } = values;\r\n    return <div className=\"flex-grow-1\">\r\n        {description}\r\n    </div>\r\n}\r\n\r\nexport const tvInvoiceInfo = (values: any) => {\r\n    let { title, taxNo } = values;\r\n    return <div className=\"flex-grow-1\">\r\n        <b>\r\n            {title}\r\n        </b>\r\n        &nbsp; {taxNo}\r\n    </div>\r\n}\r\n\r\nexport const customer = {\r\n    contact: tvContact,\r\n    address: tvAddress,\r\n    country: tvCountry,\r\n    province: tvCountry,\r\n    city: tvCountry,\r\n    county: tvCountry,\r\n    invoiceInfo: tvInvoiceInfo,\r\n    invoiceType: tvInvoiceType\r\n}\r\n","import { AppConfig } from 'tonva';\r\nimport { tvs } from 'tvs';\r\n\r\nexport const appConfig: AppConfig = {\r\n    appName: \"百灵威系统工程部/customer-service\",\r\n    version: \"1.0.4\",                   // 版本变化，缓存的uqs才会重载\r\n    tvs: tvs,\r\n};\r\n\r\nconst GLOABLE = {\r\n    CHINA: 44,\r\n    CHINESE: 196,\r\n    SALESREGION_CN: 1,\r\n    TIPDISPLAYTIME: 3000,\r\n}\r\n\r\n/*\r\nconst GLOABLE = {\r\n    CHINA: 43,\r\n    CHINESE: 197,\r\n    SALESREGION_CN: 4,\r\n    TIPDISPLAYTIME: 3000,\r\n}\r\n*/\r\n\r\nexport default GLOABLE;","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, UiInputItem, UiButton, Context, FA, LMR } from 'tonva';\r\nimport { CWebUser } from './CWebUser';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport GLOABLE from 'configuration';\r\n\r\nconst schema: Schema = [\r\n    { name: 'id', type: 'id', required: false },\r\n    { name: 'customer', type: 'string', required: true },\r\n    { name: 'teacher', type: 'string', required: false },\r\n    { name: 'submit', type: 'submit' },\r\n];\r\n\r\nconst uiSchema: UiSchema = {\r\n    items: {\r\n        id: { visible: false },\r\n        customer: {\r\n            widget: 'text', label: '客户CID', placeholder: '客户CID', rules: (value) => {\r\n                return value && value.length > 30 ? 'CID过长，请检查后输入。' : undefined;\r\n            }\r\n        } as UiInputItem,\r\n        teacher: {\r\n            widget: 'text', label: '老师CID', placeholder: '老师CID', rules: (value) => {\r\n                return value && value.length > 30 ? 'CID过长，请检查后输入。' : undefined;\r\n            }\r\n        } as UiInputItem,\r\n        submit: { widget: 'button', label: '审核通过', visible: false, className: \"btn btn-primary\" } as UiButton,\r\n    }\r\n}\r\n\r\nexport class VPendingAuditUser extends VPage<CWebUser> {\r\n\r\n    private form: Form;\r\n    private data: any = {};\r\n    private pendingOrderList: JSX.Element;\r\n    @observable tips: JSX.Element;\r\n\r\n    async open(param?: any) {\r\n        let { currentAuditingUser } = this.controller;\r\n        this.pendingOrderList = await this.controller.renderPendingOrders(currentAuditingUser.id);\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private auditPendingUser = async () => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { data } = context.form;\r\n        let { customer, teacher } = data;\r\n        // 为了在界面更新后仍显示填写的内容，需要将结果保存起来\r\n        this.data.customer = customer;\r\n        this.data.teacher = teacher;\r\n\r\n        let ret = await this.controller.auditPendingUser(data);\r\n        switch (ret) {\r\n            case 1:\r\n                this.tips = <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <FA name=\"exclamation-circle\" className=\"exclamation-circle mr-2\"></FA>审核失败，必须填写客户CID!\r\n                </div>\r\n                break;\r\n            case 2:\r\n                this.tips = <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <FA name=\"exclamation-circle\" className=\"exclamation-circle mr-2\"></FA>审核失败，你填写的客户CID不存在!\r\n                </div>\r\n                break;\r\n            case 4:\r\n                this.tips = <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <FA name=\"exclamation-circle\" className=\"exclamation-circle mr-2\"></FA>审核失败，你填写的老师CID不存在!\r\n                </div>\r\n                break;\r\n            default:\r\n                let leftseconds = 3;\r\n                this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n                    <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>审核成功{leftseconds}\r\n                </div>\r\n                let h = setInterval(() => {\r\n                    leftseconds--;\r\n                    this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n                        <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>审核成功{leftseconds}\r\n                    </div>\r\n                }, 1000);\r\n                setTimeout(() => {\r\n                    clearInterval(h);\r\n                    this.backPage();\r\n                }, 3000);\r\n                break;\r\n        }\r\n        setTimeout(() => {\r\n            this.tips = undefined;\r\n        }, GLOABLE.TIPDISPLAYTIME);\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { currentAuditingUser, webUserContact, openAuditRefuse } = this.controller;\r\n        let { id, firstName, salutation, organizationName, departmentName } = currentAuditingUser;\r\n\r\n        let contactInfoUi = <div className=\"col-12 text-danger\">该用户未填写手机号、电话或Email信息</div>;\r\n        if (webUserContact) {\r\n            let { telephone, mobile, email } = webUserContact;\r\n            contactInfoUi = <>\r\n                <div className=\"col-4 text-muted\">手机:</div>\r\n                <div className=\"col-8\"><a href={`tel:${mobile}`}>{mobile}</a></div>\r\n                <div className=\"col-4 text-muted\">电话:</div>\r\n                <div className=\"col-8\"><a href={`tel:${telephone}`}>{telephone}</a></div>\r\n                <div className=\"col-4 text-muted\">Email:</div>\r\n                <div className=\"col-8\"><a href={`mailto:${email}`}>{email}</a></div>\r\n            </>;\r\n        }\r\n\r\n        this.data.id = id;\r\n        let footer = <LMR\r\n            right={<button type=\"button\"\r\n                className=\"btn btn-primary m-1\"\r\n                onClick={this.auditPendingUser}>通过</button>}\r\n            left={\r\n                <button type=\"button\"\r\n                    className=\"btn btn-outline-primary m-1\"\r\n                    onClick={openAuditRefuse}>不通过</button>}\r\n        />\r\n        return <Page header=\"待审核客户详情\" footer={footer}>\r\n            <div className=\"bg-white p-3 mt-1\">\r\n                <strong className=\"large\">{firstName}</strong> <span className=\"small text-muted\">{salutation}</span>\r\n            </div>\r\n            <div className=\"row bg-white pb-3 pl-4 pr-3\">\r\n                {contactInfoUi}\r\n                <div className=\"col-4 text-muted\">单位:</div>\r\n                <div className=\"col-8\">{organizationName}</div>\r\n                <div className=\"col-4 text-muted\">部门:</div>\r\n                <div className=\"col-8\">{departmentName}</div>\r\n            </div>\r\n            <div className=\"card my-2 p-2\">\r\n                <h5 className=\"card-title\">审核</h5>\r\n                {this.tips}\r\n                <Form ref={v => this.form = v} schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={this.data}\r\n                    className=\"bg-white px-3\"\r\n                    onButtonClick={this.onFormButtonClick}></Form>\r\n            </div>\r\n            <div className=\"card my-2 p-2\">\r\n                <h5 className=\"card-title\">未审核订单列表</h5>\r\n                {this.pendingOrderList}\r\n            </div>\r\n        </Page>\r\n    });\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Schema, UiSchema, UiInputItem, UiButton, UiRadio, Form, Context, FA } from 'tonva';\r\nimport { CWebUser } from './CWebUser';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst schema: Schema = [\r\n    { name: 'id', type: 'id', required: false },\r\n    { name: 'reason', type: 'id', required: true },\r\n    { name: 'comments', type: 'string', required: false },\r\n    { name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VPendingAuditUserRefuse extends VPage<CWebUser> {\r\n\r\n    @observable tips: JSX.Element;\r\n    async open(param: any) {\r\n        (this.uiSchema.items.reason as UiRadio).list = (param as any[]).map(v => { return { value: v.id, title: v.description } });\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n\r\n        let { data } = context.form;\r\n        this.controller.auditPendingUserRefuse(data);\r\n        let leftseconds = 3;\r\n        this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n            <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>操作成功{leftseconds}\r\n        </div>\r\n        let h = setInterval(() => {\r\n            leftseconds--;\r\n            this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n                <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>操作成功{leftseconds}\r\n            </div>\r\n        }, 1000);\r\n        setTimeout(() => {\r\n            clearInterval(h);\r\n            this.closePage(2);\r\n        }, 3000);\r\n    }\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            id: { visible: false },\r\n            reason: { widget: 'radio', label: '拒绝原因', list: [] } as UiRadio,\r\n            comments: {\r\n                widget: 'text', label: '备注', placeholder: '备注', rules: (value) => {\r\n                    return value && value.length > 100 ? '备注最多可以输入100个字。' : undefined;\r\n                }\r\n            } as UiInputItem,\r\n            submit: { widget: 'button', label: '审核不通过', visible: true, className: \"btn btn-primary w-100\" } as UiButton\r\n        }\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header='审核不通过'>\r\n            <Form schema={schema}\r\n                className=\"px-3 pb-3\"\r\n                uiSchema={this.uiSchema} onButtonClick={this.onFormButtonClick}></Form>\r\n            {this.tips}\r\n        </Page>\r\n    })\r\n}","import { CSub, CBase } from \"tonva\";\r\nimport { UQs } from \"./uqs\";\r\n\r\nexport abstract class CUqBase extends CBase {\r\n    protected get uqs(): UQs { return this._uqs as UQs }\r\n}\r\n\r\nexport abstract class CUqSub extends CSub {\r\n    protected get uqs(): UQs { return this._uqs as UQs }\r\n    protected readonly owner: CUqBase;\r\n}\r\n","import { VPendingAuditUserList } from './VPendingAuditUserList';\r\nimport { observable } from 'mobx';\r\nimport { VPendingAuditUser } from './VPendingAuditUser';\r\nimport { VPendingAuditUserRefuse } from './VPendingAuditUserRefuse';\r\nimport { CUqBase } from 'CBase';\r\n\r\nexport class CWebUser extends CUqBase {\r\n\r\n    @observable pendingUsers: any[];\r\n\r\n    currentAuditingUser: any;\r\n    webUserContact: any;\r\n\r\n    protected async internalStart() {\r\n        // this.pendingUsers = await this.uqs.webuser.getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    tab = () => this.renderView(VPendingAuditUserList);\r\n\r\n    async getPendingUsers() {\r\n        this.pendingUsers = await this.uqs.webuser.getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    async openPendingAuditUserDetail(user: any) {\r\n        let { webUser: webUserBox } = user;\r\n        let { id } = webUserBox;\r\n        this.currentAuditingUser = await this.uqs.webuser.WebUser.load(id);\r\n        this.webUserContact = await this.uqs.webuser.WebUserContact.obj({ webUser: id });\r\n        this.openVPage(VPendingAuditUser);\r\n    }\r\n\r\n    /**\r\n     * 审核通过操作\r\n     * @param data ：包含审核通过之后的内部cid\r\n     */\r\n    async auditPendingUser(data: any) {\r\n        let { id, customer: customerNo } = data;\r\n        if (!customerNo)\r\n            return 1;\r\n        let customerBox = await this.uqs.customer.getCustomerByNo.obj({ customerNo: customerNo });\r\n        if (!customerBox)\r\n            return 2;\r\n        let { id: customerId } = customerBox.customer;\r\n\r\n        /*\r\n        let teacherId = undefined;\r\n        if (teacherNo) {\r\n            let teacherBox = await this.uqs.customer.getCustomerByNo.obj({ customerNo: teacherNo });\r\n            if (!teacherBox)\r\n                return 4;\r\n            teacherId = teacherBox.customer.id;\r\n        }\r\n        */\r\n\r\n        await this.uqs.webuser.auditPendingUser.submit({ id: id, customerId: customerId });\r\n        let { cOrder } = this.cApp;\r\n        await cOrder.auditPendingOrder(id);\r\n        // 刷新列表\r\n        this.pendingUsers = await this.uqs.webuser.getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    /**\r\n     * 打开审核不通过界面\r\n     */\r\n    openAuditRefuse = async () => {\r\n\r\n        let reasons = await this.uqs.webuser.AuditPendingUserRefuseReason.search(undefined, 0, 100);\r\n        this.openVPage(VPendingAuditUserRefuse, reasons);\r\n        //await this.controller.auditPendingUserRefuse(this.data.id);\r\n    }\r\n\r\n    /**\r\n     * 审核不通过操作\r\n     * @param reasonData\r\n     */\r\n    async auditPendingUserRefuse(reasonData: any) {\r\n        let { reason, comments } = reasonData;\r\n        let { id: currentAuditingUserId } = this.currentAuditingUser;\r\n        await this.uqs.webuser.auditPendingUserRefuse.submit({ id: currentAuditingUserId, reason: reason, comments: comments });\r\n        /*\r\n        let { cOrder } = this.cApp;\r\n        await cOrder.cancelPendingOrder(currentAuditingUserId);\r\n        */\r\n        this.pendingUsers = await this.uqs.webuser.getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    /**\r\n     * 显示待审核客户的未审核订单\r\n     */\r\n    renderPendingOrders = async (webUserId: bigint) => {\r\n        let { cOrder } = this.cApp;\r\n        return await cOrder.renderPendingOrder(webUserId);\r\n    }\r\n}","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport {\r\n    userApi, ItemSchema, StringSchema, ImageSchema, UiTextItem, UiImageItem, nav, Page,\r\n    Edit, UiSchema,\r\n    VPage, UiRadio, IdSchema, UiIdItem, Context, BoxId, tv\r\n} from 'tonva';\r\nimport { CMe } from './CMe';\r\nimport {\r\n    faxValidation, emailValidation, mobileValidation, telephoneValidation,\r\n    addressDetailValidation, zipCodeValidation,\r\n    organizationNameValidation, departmentNameValidation,\r\n    salutationValidation, nameValidation\r\n} from '../tools/inputValidations';\r\n\r\nexport class EditMeInfo extends VPage<CMe>{\r\n\r\n    async open(param: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private schema: ItemSchema[] = [\r\n        { name: 'nick', type: 'string' } as StringSchema,\r\n        { name: 'icon', type: 'image' } as ImageSchema,\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            nick: { widget: 'text', label: '别名', placeholder: '好的别名更方便记忆' } as UiTextItem,\r\n            icon: { widget: 'image', label: '头像' } as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data: any;\r\n\r\n    @observable private webUserData: any;\r\n\r\n    @observable private webUserContactData: any;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        let { nick, icon } = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        };\r\n\r\n        let { cApp } = this.controller;\r\n        let { firstName, gender, salutation, organizationName, departmentName, telephone\r\n            , mobile, email, fax, zipCode, address, addressString } = cApp.currentUser;\r\n        this.webUserData = {\r\n            firstName: firstName,\r\n            gender: gender,\r\n            salutation: salutation,\r\n            organizationName: organizationName,\r\n            departmentName: departmentName,\r\n        };\r\n\r\n        this.webUserContactData = {\r\n            telephone: telephone,\r\n            mobile: mobile,\r\n            email: email,\r\n            fax: fax,\r\n            address: address,\r\n            addressString: addressString,\r\n            zipCode: zipCode,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    private onWebUserChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        this.webUserData[name] = newValue;\r\n        await this.controller.changeWebUser(this.webUserData);\r\n    }\r\n\r\n    private onWebUserContactChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        this.webUserContactData[name] = newValue;\r\n        await this.controller.changeWebUserContact(this.webUserContactData);\r\n    }\r\n\r\n    private page = () => {\r\n        let { schema, uiSchema, data, onItemChanged } = this;\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={schema} uiSchema={uiSchema}\r\n                data={data}\r\n                onItemChanged={onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport const webUserSchema: ItemSchema[] = [\r\n    { name: 'firstName', type: 'string', required: true } as StringSchema,\r\n    { name: 'gender', type: 'string' } as StringSchema,\r\n    { name: 'salutation', type: 'string' } as StringSchema,\r\n    { name: 'organizationName', type: 'string', required: true } as StringSchema,\r\n    { name: 'departmentName', type: 'string' } as StringSchema,\r\n];\r\n\r\nexport const webUserUiSchema: UiSchema = {\r\n    items: {\r\n        firstName: {\r\n            widget: 'text', label: '真实姓名',\r\n            placeholder: '化学品是受国家安全法规限制的特殊商品，百灵威提供技术咨询、资料以及化学产品的对象必须是具有化学管理和应用能力的专业单位（非个人）。为此，需要您重新提供非虚拟的、可核查的信息。',\r\n            rules: nameValidation\r\n        } as UiTextItem,\r\n        gender: { widget: 'radio', label: '性别', list: [{ value: '1', title: '男' }, { value: '0', title: '女' }] } as UiRadio,\r\n        salutation: { widget: 'text', label: '称谓', rules: salutationValidation } as UiTextItem,\r\n        organizationName: { widget: 'text', label: '单位名称', rules: organizationNameValidation } as UiTextItem,\r\n        departmentName: { widget: 'text', label: '部门名称', rules: departmentNameValidation } as UiTextItem,\r\n    }\r\n}\r\n\r\n// 个人联系方式信息\r\nexport const webUserContactSchema: ItemSchema[] = [\r\n    { name: 'telephone', type: 'string' } as StringSchema,\r\n    { name: 'mobile', type: 'string', required: true } as StringSchema,\r\n    { name: 'email', type: 'string' } as StringSchema,\r\n    { name: 'fax', type: 'string', required: false } as StringSchema,\r\n    { name: 'address', type: 'id', required: false } as IdSchema,\r\n    { name: 'addressString', type: 'string', required: false } as StringSchema,\r\n    { name: 'zipCode', type: 'string', required: false } as StringSchema,\r\n];\r\n\r\nexport function webUserContactUiSchema(pickAddress: any) {\r\n    return {\r\n        items: {\r\n            telephone: { widget: 'text', label: '固定电话', rules: telephoneValidation } as UiTextItem,\r\n            mobile: { widget: 'text', label: '手机号', rules: mobileValidation } as UiTextItem,\r\n            email: { widget: 'text', label: 'Email', rules: emailValidation, placeholder: 'Email' } as UiTextItem,\r\n            fax: { widget: 'text', label: '传真', rules: faxValidation } as UiTextItem,\r\n            address: {\r\n                widget: 'id', label: '所在地区',\r\n                pickId: async (context: Context, name: string, value: number) => await pickAddress(context, name, value),\r\n                Templet: (address: BoxId) => {\r\n                    return tv(address, (addressValue) => {\r\n                        let { country, province, city, county } = addressValue;\r\n                        /* 下面这种在使用tv之前的一堆判断应该是tv或者什么的有bug, 应该让Henry改改 */\r\n                        return <>\r\n                            {country !== undefined && country.id !== undefined && tv(country, v => <>{v.chineseName}</>)}\r\n                            {province !== undefined && province.id !== undefined && tv(province, (v) => <>{v.chineseName}</>)}\r\n                            {city !== undefined && city.id !== undefined && tv(city, (v) => <>{v.chineseName}</>)}\r\n                            {county !== undefined && county.id !== undefined && tv(county, (v) => <>{v.chineseName}</>)}\r\n                        </>;\r\n                    }, () => {\r\n                        return <small className=\"text-muted\">请选择地区</small>;\r\n                    })\r\n                }\r\n            } as UiIdItem,\r\n            addressString: { widget: 'text', label: '详细地址', rules: addressDetailValidation } as UiTextItem,\r\n            zipCode: { widget: 'text', label: '邮编', rules: zipCodeValidation } as UiTextItem,\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page, Image, VPage } from 'tonva';\r\nimport { Prop, IconText, FA, PropGrid, LMR } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { EditMeInfo } from './EditMeInfo';\r\nimport { CMe } from './CMe';\r\nimport { appConfig } from 'configuration';\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(param?: any) {\r\n\r\n    }\r\n\r\n    private exit() {\r\n        nav.showLogout();\r\n    }\r\n\r\n    private changePassword = async () => {\r\n        await nav.changePassword();\r\n    }\r\n\r\n    private meInfo = observer(() => {\r\n        let { user } = nav;\r\n        if (user === undefined) return null;\r\n        let { id, name, nick, icon } = user;\r\n        return <LMR className=\"py-2 cursor-pointer w-100\"\r\n            left={<Image className=\"w-3c h-3c mr-3\" src={icon} />}\r\n            right={<FA className=\"align-self-end\" name=\"angle-right\" />}\r\n            onClick={() => {\r\n                this.openVPage(EditMeInfo);\r\n            }}>\r\n            <div>\r\n                <div>{userSpan(name, nick)}</div>\r\n                <div className=\"small\"><span className=\"text-muted\">ID:</span> {id > 10000 ? id : String(id + 10000).substr(1)}</div>\r\n            </div>\r\n        </LMR>;\r\n    });\r\n\r\n    render() {\r\n        const { user } = nav;\r\n        let aboutRows: Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"w-100 d-flex justify-content-between\">\r\n                    <IconText iconClass=\"text-info mr-2\" icon=\"smile-o\" text=\"关于本APP\" />\r\n                    <div className=\"py-2 small\">V{appConfig.version}</div>\r\n                </div>,\r\n            },\r\n            ''\r\n        ];\r\n\r\n        let rows: Prop[];\r\n        if (user === undefined) {\r\n            rows = aboutRows;\r\n            rows.push(\r\n                {\r\n                    type: 'component',\r\n                    component: <button className=\"btn btn-success w-100 my-2\" onClick={() => nav.showLogin(undefined, true)}>\r\n                        <FA name=\"sign-out\" size=\"lg\" /> 请登录\r\n                    </button>\r\n                },\r\n            );\r\n        }\r\n        else {\r\n            let logOutRows: Prop[] = [\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    bk: '',\r\n                    component: <button className=\"btn btn-danger w-100\" onClick={this.exit}>\r\n                        <FA name=\"sign-out\" size=\"lg\" /> 退出登录\r\n                </button>\r\n                },\r\n            ];\r\n\r\n            rows = [\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <this.meInfo />\r\n                },\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <IconText iconClass=\"text-info mr-2\" icon=\"key\" text=\"修改密码\" />,\r\n                    onClick: this.changePassword\r\n                },\r\n            ]\r\n            rows.push(...aboutRows, ...logOutRows);\r\n        }\r\n        return <Page header=\"我的\">\r\n            <PropGrid rows={[...rows]} values={{}} />;\r\n        </Page>\r\n    }\r\n}\r\n\r\n\r\nfunction userSpan(name: string, nick: string): JSX.Element {\r\n    return nick ?\r\n        <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n        : <b>{name}</b>\r\n}","import { CUqBase } from '../CBase';\r\nimport { VMe } from './VMe';\r\n\r\nexport class CMe extends CUqBase {\r\n    protected async internalStart() {\r\n\r\n    }\r\n\r\n    async changeWebUser(webUser: any) {\r\n        let { currentUser } = this.cApp;\r\n        await currentUser.changeWebUser(webUser);\r\n    }\r\n\r\n    async changeWebUserContact(webUserContact: any) {\r\n        let { currentUser } = this.cApp;\r\n        await currentUser.changeWebUserContact(webUserContact);\r\n    }\r\n\r\n    tab = () => this.renderView(VMe);\r\n}","import * as React from 'react';\r\nimport { View, List, EasyDate } from 'tonva';\r\nimport { COrder } from './COrder';\r\n\r\nexport class VPendingOrderList extends View<COrder> {\r\n\r\n    private renderOrder = (order: any, index: number) => {\r\n        let { openOrderDetail } = this.controller;\r\n        let { id, no, date } = order;\r\n        return <div className=\"m-3 justify-content-between cursor-pointer\" onClick={() => openOrderDetail(id)}>\r\n            <div><span className=\"small text-muted\">订单编号: </span><strong>{no}</strong></div>\r\n            <div className=\"small text-muted\"><EasyDate date={date} /></div>\r\n        </div>;\r\n    }\r\n\r\n    render(pendingOrders?: any): JSX.Element {\r\n        return <List items={pendingOrders} item={{ render: this.renderOrder }} none='无未审核订单'></List>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, BoxId } from 'tonva';\r\nimport { COrder } from './COrder';\r\nimport { tv } from 'tonva';\r\nimport { List } from 'tonva';\r\n\r\nexport class VOrderDetail extends VPage<COrder> {\r\n\r\n    async open(order: any) {\r\n        this.openPage(this.page, order);\r\n    }\r\n\r\n    private packsRow = (item: any, index: number) => {\r\n        let { pack, quantity, price } = item;\r\n\r\n        return <div key={index} className=\"px-2 py-2 border-top\">\r\n            <div className=\"d-flex align-items-center\">\r\n                <div className=\"flex-grow-1\"><b>{tv(pack)}</b></div>\r\n                <div className=\"w-12c mr-4 text-right\">\r\n                    <span className=\"text-danger h5\"><small>¥</small>{parseFloat((price * quantity).toFixed(2))}</span>\r\n                    <small className=\"text-muted\">(¥{parseFloat(price.toFixed(2))} × {quantity})</small>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private renderOrderItem = (orderItem: any) => {\r\n        let { product, packs } = orderItem;\r\n        let { controller, packsRow } = this;\r\n        return <div>\r\n            <div className=\"row p-1 my-1\">\r\n                <div className=\"col-lg-6 pb-3\">{controller.renderOrderItemProduct(product)}</div>\r\n                <div className=\"col-lg-6\">{\r\n                    packs.map((p, index) => {\r\n                        return packsRow(p, index);\r\n                    })\r\n                }</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = (order: any) => {\r\n\r\n        let { brief, data } = order;\r\n        let { no } = brief;\r\n        let { orderItems, currency, shippingContact, invoiceContact, invoiceType, invoiceInfo, amount, couponOffsetAmount, couponRemitted\r\n            , freightFee, freightFeeRemitted } = data;\r\n        let couponUI;\r\n        if (couponOffsetAmount || couponRemitted) {\r\n            let offsetUI, remittedUI;\r\n            if (couponOffsetAmount) {\r\n                offsetUI = <div className=\"d-flex flex-row justify-content-between\">\r\n                    <div className=\"text-muted\">折扣:</div>\r\n                    <div className=\"text-right text-danger\"><small>¥</small>{couponOffsetAmount}</div>\r\n                </div>\r\n            }\r\n            if (couponRemitted) {\r\n                remittedUI = <div className=\"d-flex flex-row justify-content-between\">\r\n                    <div className=\"text-muted\">抵扣:</div>\r\n                    <div className=\"text-right text-danger\"><small>¥</small>{couponRemitted}</div>\r\n                </div>\r\n            }\r\n            couponUI = <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">优惠券:</div>\r\n                <div className=\"col-9\">\r\n                    {offsetUI}\r\n                    {remittedUI}\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        let freightFeeUI, freightFeeRemittedUI;\r\n        if (freightFee) {\r\n            freightFeeUI = <>\r\n                <div className=\"text-right text-danger\"><small>¥</small>{freightFee}</div>\r\n            </>\r\n            if (freightFeeRemitted) {\r\n                freightFeeRemittedUI = <>\r\n                    <div className=\"text-right text-danger\"><small>¥</small>{freightFeeRemitted}(减免)</div>\r\n                </>\r\n            }\r\n        }\r\n\r\n        let header = <>订单详情: {no}</>\r\n        return <Page header={header}>\r\n            <List items={orderItems} item={{ render: this.renderOrderItem }} />\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">收货地址:</div>\r\n                <div className=\"col-9\">{tv(shippingContact)}</div>\r\n            </div>\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">发票地址:</div>\r\n                <div className=\"col-9\">{tv(invoiceContact)}</div>\r\n            </div>\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">发票信息:</div>\r\n                <div className=\"col-9\">{invoiceTemplate(invoiceType, invoiceInfo)}</div>\r\n            </div>\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">运费:</div>\r\n                <div className=\"col-9\">{freightFeeUI}{freightFeeRemittedUI}</div>\r\n            </div>\r\n            {couponUI}\r\n            <div className=\"bg-white p-3 my-1 text-right\">\r\n                <span className=\"text-danger font-weight-bold\">总金额: {amount}{tv(currency)}</span>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\nfunction invoiceTemplate(invoiceType: BoxId, invoiceInfo: BoxId): JSX.Element {\r\n    return <>\r\n        {tv(invoiceType, invoiceTypeUI, undefined, () => <></>)}<br />\r\n        {tv(invoiceInfo, invoiceInfoUI, undefined, () => <></>)}\r\n    </>\r\n}\r\n\r\nfunction invoiceTypeUI(values: any) {\r\n    let { description } = values;\r\n    return <>{description}</>;\r\n}\r\n\r\nfunction invoiceInfoUI(values: any) {\r\n    let { title } = values;\r\n    return <>{title}</>;\r\n}","import { VPendingOrderList } from './VPendingOrderList';\r\nimport { VOrderDetail } from './VOrderDetail';\r\nimport { CUqBase } from 'CBase';\r\nimport { BoxId } from 'tonva';\r\n\r\nexport class COrder extends CUqBase {\r\n\r\n    async internalStart(param: any) {\r\n    }\r\n\r\n    async renderPendingOrder(webUserId: number) {\r\n        // let pendingAuditOrders = await this.uqs.order.GetPendingAuditOrders.table({ webUser: webUserId });\r\n        let pendingAuditOrders = await this.uqs.order.Order.userSheets(\"matching\", webUserId, 0, 100);\r\n        return this.renderView(VPendingOrderList, pendingAuditOrders);\r\n    }\r\n\r\n    async auditPendingOrder(webUserId: number) {\r\n        // let pendingAuditOrders = await this.uqs.order.GetPendingAuditOrders.table({ webUser: webUserId });\r\n        let pendingAuditOrders = await this.uqs.order.Order.userSheets(\"matching\", webUserId, 0, 100);\r\n        for (let i = 0; i < pendingAuditOrders.length; i++) {\r\n            let order = pendingAuditOrders[i];\r\n            let { id, flow } = order;\r\n            await this.uqs.order.Order.action(id, flow, 'matching', \"Pass\");\r\n        }\r\n    }\r\n\r\n    /*\r\n    async cancelPendingOrder(webUserId: bigint) {\r\n        let pendingAuditOrders = await this.uqs.order.GetPendingAuditOrders.table({ webUser: webUserId });\r\n        for (let i = 0; i < pendingAuditOrders.length; i++) {\r\n            let order = pendingAuditOrders[i];\r\n            let { id, flow, state } = order;\r\n            await this.uqs.order.Order.action(id, flow, state, \"Cancel\");\r\n        }\r\n    }\r\n    */\r\n\r\n    openOrderDetail = async (orderId: number) => {\r\n\r\n        let order = await this.uqs.order.Order.getSheet(orderId);\r\n        let { data } = order;\r\n        let { orderitems } = data;\r\n        let orderItemsGrouped = orderItemGroupByProduct(orderitems);\r\n        data.orderItems = orderItemsGrouped;\r\n        this.openVPage(VOrderDetail, order);\r\n    }\r\n\r\n    renderOrderItemProduct = (product: BoxId) => {\r\n        let { cProduct } = this.cApp;\r\n        return cProduct.renderCartProduct(product);\r\n    }\r\n}\r\n\r\nexport function orderItemGroupByProduct(packItems: any[]) {\r\n    let result: any[] = [];\r\n    for (let cd of packItems) {\r\n        let { product, pack, quantity, price, currency } = cd;\r\n        let cpi = result.find(e => e.product.id === product.id);\r\n        if (cpi === undefined) {\r\n            cpi = { product: product, packs: [] };\r\n            result.push(cpi);\r\n        }\r\n        let packRow: any = {\r\n            pack: pack,\r\n            price: price,\r\n            quantity: quantity,\r\n            currency: currency && currency.id\r\n        }\r\n        cpi.packs.push(packRow);\r\n    }\r\n    return result;\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CCustomerServiceApp } from 'CCustomerServiceApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VMain extends VPage<CCustomerServiceApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n    render = (param?: any): JSX.Element => {\r\n        let { cWebUser, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '首页', icon: 'home', content: cWebUser.tab, notify: undefined/*store.homeCount*/ },\r\n            { name: 'me', label: '我的', icon: 'user', content: cMe.tab }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { View, tv } from 'tonva';\r\nimport { CProduct, productPropItem, renderBrand } from './CProduct';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VCartProuductView extends View<CProduct> {\r\n\r\n    render(param: any): JSX.Element {\r\n        return <>{tv(param, this.renderCartProduct)}</>;\r\n    }\r\n\r\n\r\n    private renderCartProduct = (product: any) => {\r\n        let { brand, description, descriptionC, origin, imageUrl } = product;\r\n\r\n        return <div className=\"row d-flex mb-3 px-2\">\r\n            <div className=\"col-12\">\r\n                <div className=\"py-2\">\r\n                    <strong>{description}</strong>\r\n                </div>\r\n                <div className=\"pb-2\">\r\n                    <strong>{descriptionC}</strong>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <ProductImage chemicalId={imageUrl} className=\"w-4c h-4c\" />\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <div className=\"row\">\r\n                            {this.controller.renderChemicalInfo(product)}\r\n                            {productPropItem('编号', origin)}\r\n                            {tv(brand, renderBrand)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VProuductView extends View<CProduct> {\r\n\r\n    render(param: any): JSX.Element {\r\n        return <>{tv(param, this.renderProduct)}</>;\r\n    }\r\n\r\n    private renderProduct = (product: any) => {\r\n        let { brand, description, descriptionC, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-3\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {productPropItem('产品编号', origin)}\r\n                        {tv(brand, renderBrand)}\r\n                        {this.controller.renderChemicalInfo(product)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CProduct, productPropItem } from './CProduct';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VChemicalInfo extends View<CProduct> {\r\n\r\n    render(param: any): JSX.Element {\r\n        let { id: productId } = param;\r\n        let { controller } = this;\r\n        controller.getChemicalInfo(productId);\r\n        return <this.content productId={productId} />;\r\n    }\r\n\r\n    private content = observer((param: any) => {\r\n\r\n        let { productId } = param;\r\n        let { chemicalInfoContainer } = this.controller;\r\n        let chemicalInfo = chemicalInfoContainer[productId];\r\n        if (chemicalInfo !== undefined) {\r\n            let { purity, CAS } = chemicalInfo;\r\n            return <>\r\n                {productPropItem('CAS', CAS)}\r\n                {productPropItem('纯度', purity)}\r\n            </>\r\n        }\r\n        return <></>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { tv, BoxId } from 'tonva';\r\nimport classNames from 'classnames';\r\nimport { CUqBase } from '../CBase';\r\nimport { ProductImage } from '../tools/productImage';\r\nimport { VCartProuductView } from './VProductView';\r\nimport { VChemicalInfo } from './VChemicalInfo';\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends CUqBase {\r\n    @observable chemicalInfoContainer: { [productId: number]: any } = {};\r\n\r\n    protected async internalStart(param: any) {\r\n    }\r\n\r\n    renderChemicalInfo = (product: BoxId) => {\r\n        return this.renderView(VChemicalInfo, product);\r\n    }\r\n\r\n    getChemicalInfo = async (productId: number) => {\r\n        if (this.chemicalInfoContainer[productId] === undefined) {\r\n            this.chemicalInfoContainer[productId] = await this.uqs.product.ProductChemical.obj({ product: productId });\r\n        }\r\n    }\r\n\r\n    renderCartProduct = (product: BoxId) => {\r\n        return this.renderView(VCartProuductView, product);\r\n    }\r\n}\r\n\r\nexport function renderBrand(brand: any) {\r\n    return productPropItem('品牌', brand.name);\r\n}\r\n\r\nexport function productPropItem(caption: string, value: any, captionClass?: string) {\r\n    if (value === null || value === undefined || value === '0') return null;\r\n    let capClass = captionClass ? classNames(captionClass) : classNames(\"text-muted\");\r\n    let valClass = captionClass ? classNames(captionClass) : \"\";\r\n    return <>\r\n        <div className={classNames(\"col-6 col-sm-2 pr-0 small\", capClass)}> {caption}</div>\r\n        <div className={classNames(\"col-6 col-sm-4\", valClass)}>{value}</div>\r\n    </>;\r\n}\r\n\r\nexport function renderProduct(product: any) {\r\n    let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n    return <div className=\"d-block mb-4 px-3\">\r\n        <div className=\"py-2\">\r\n            <div><strong>{description}</strong></div>\r\n            <div>{descriptionC}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-3\">\r\n                <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n            </div>\r\n            <div className=\"col-9\">\r\n                <div className=\"row\">\r\n                    {productPropItem('CAS', CAS)}\r\n                    {productPropItem('产品编号', origin)}\r\n                    {productPropItem('纯度', purity)}\r\n                    {productPropItem('分子式', molecularFomula)}\r\n                    {productPropItem('分子量', molecularWeight)}\r\n                    {tv(brand, renderBrand)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import { User } from 'tonva';\r\nimport { BoxId } from 'tonva';\r\nimport { observable, computed } from 'mobx';\r\nimport { UQs } from './uqs';\r\n\r\nexport class WebUser {\r\n\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n    guest: number;\r\n    token: string;\r\n\r\n    @observable firstName: string;\r\n    gender: string;\r\n    salutation: string;\r\n    @observable organizationName: string;\r\n    departmentName: string;\r\n\r\n    telephone: string;\r\n    @observable mobile: string;\r\n    email: string;\r\n    fax: string;\r\n    address: BoxId;\r\n    addressString: string;\r\n    zipCode: string;\r\n    @computed get allowOrdering() {\r\n        return this.currentCustomer !== undefined ||\r\n            (this.mobile && this.firstName && this.organizationName);\r\n    }\r\n\r\n    private _user: User;\r\n\r\n    private webUserSettings: any;\r\n\r\n    private uqs: UQs;\r\n\r\n\r\n    constructor(uqs: UQs) {// cUsqWebUser: CUq, cUsqCustomer: CUq) {\r\n        this.uqs = uqs;\r\n    }\r\n\r\n    setUser = async (user: User) => {\r\n        if (user !== undefined) {\r\n            this._user = user;\r\n            this.id = user.id;\r\n            this.name = user.name;\r\n            this.nick = user.nick;\r\n            this.icon = user.icon;\r\n            this.guest = user.guest;\r\n            this.token = user.token;\r\n\r\n            await this.loadWebUser();\r\n        }\r\n    }\r\n\r\n    private async loadWebUser() {\r\n        let { id, _user } = this;\r\n        if (_user !== undefined) {\r\n            let webUser = await this.uqs.webuser.WebUser.load(id);\r\n            if (webUser) {\r\n                let { firstName, gender, salutation, organizationName, departmentName } = webUser;\r\n                this.firstName = firstName;\r\n                this.gender = gender;\r\n                this.salutation = salutation;\r\n                this.organizationName = organizationName;\r\n                this.departmentName = departmentName;\r\n            }\r\n            let contact = await this.uqs.webuser.WebUserContact.obj({ webUser: this.id });\r\n            if (contact) {\r\n                let { telephone, mobile, email, fax, address, addressString, zipCode } = contact;\r\n                this.telephone = telephone;\r\n                this.mobile = mobile;\r\n                this.email = email;\r\n                this.fax = fax;\r\n                this.address = address;\r\n                this.addressString = addressString;\r\n                this.zipCode = zipCode;\r\n            }\r\n            this.webUserSettings = await this.uqs.webuser.WebUserSetting.obj({ webUser: this.id }) || { webUser: this.id };\r\n            let value = await this.uqs.webuser.WebUserCustomer.obj({ webUser: this.id });\r\n            if (value !== undefined) {\r\n                this.currentCustomer = new Customer(value.customer, this.uqs);\r\n                await this.currentCustomer.init();\r\n            }\r\n        }\r\n    }\r\n\r\n    get isLogined(): boolean {\r\n        return this._user !== undefined;\r\n    }\r\n    get hasCustomer(): boolean {\r\n        return this.currentCustomer !== undefined;\r\n    }\r\n    currentCustomer: Customer;\r\n\r\n    async getContacts(): Promise<any[]> {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            return await this.currentCustomer.getContacts()\r\n        }\r\n        */\r\n        return await this.uqs.webuser.WebUserContacts.table({ webUser: this.id });\r\n    }\r\n\r\n    async addContact(contactId: number) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.addContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        await this.uqs.webuser.WebUserContacts.add({ webUser: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async delContact(contactId: number) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.delContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        await this.uqs.webuser.WebUserContacts.del({ webUser: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async getSetting() {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            return this.currentCustomer.getSetting();\r\n        }\r\n        */\r\n        return this.webUserSettings;\r\n    }\r\n\r\n    async setDefaultShippingContact(contactId: BoxId) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.setDefaultShippingContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        this.webUserSettings.shippingContact = contactId;\r\n        this.saveDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoiceContact(contactId: BoxId) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.setDefaultInvoiceContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        this.webUserSettings.invoiceContact = contactId;\r\n        this.saveDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoice(invoiceTypeId: BoxId, invoiceInfoId: BoxId) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.setDefaultInvoice(invoiceTypeId, invoiceInfoId);\r\n            return;\r\n        }\r\n        */\r\n        // await this.webUserSettingMap.add({ webUser: this.id, arr1: [{ invoiceType: invoiceTypeId, invoiceInfo: invoiceInfoId }] });\r\n        this.webUserSettings.invoiceType = invoiceTypeId;\r\n        this.webUserSettings.invoiceInfo = invoiceInfoId;\r\n        this.saveDefaultSettings();\r\n    }\r\n\r\n    async saveDefaultSettings() {\r\n        await this.uqs.webuser.WebUserSetting.add(this.webUserSettings);\r\n    }\r\n\r\n\r\n    async changeWebUser(webUser: any) {\r\n        await this.uqs.webuser.WebUser.save(this.id, webUser);\r\n        await this.loadWebUser();\r\n    }\r\n\r\n    async changeWebUserContact(webUserContact: any) {\r\n        webUserContact.webUser = this.id;\r\n        await this.uqs.webuser.WebUserContact.add(webUserContact);\r\n        await this.loadWebUser();\r\n    }\r\n};\r\n\r\nexport class Customer {\r\n    private readonly uqs: UQs;\r\n    //private contactMap: Map;\r\n    id: number;\r\n\r\n    //private customerSettingMap: Map;\r\n\r\n    private customerSettings: any;\r\n\r\n    constructor(customer: BoxId, uqs: UQs) {\r\n        this.id = customer.id;\r\n        this.uqs = uqs;\r\n        /*\r\n        this.contactMap = cUsqCustomer.map('customerContacts');\r\n        this.customerSettingMap = cUsqCustomer.map('customerSetting');\r\n        */\r\n    };\r\n\r\n    async getContacts(): Promise<any[]> {\r\n        return await this.uqs.customer.CustomerContacts.table({ customer: this.id });\r\n    }\r\n\r\n    async addContact(contactId: number) {\r\n        await this.uqs.customer.CustomerContacts.add({ customer: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async delContact(contactId: number) {\r\n        await this.uqs.customer.CustomerContacts.del({ customer: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async init() {\r\n        this.customerSettings = await this.uqs.customer.CustomerSetting.obj({ customer: this.id }) || { customer: this.id };\r\n    }\r\n\r\n    getSetting() {\r\n        return this.customerSettings;\r\n    }\r\n\r\n    async setDefaultShippingContact(contactId: BoxId) {\r\n        this.customerSettings.shippingContact = contactId;\r\n        await this.setDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoiceContact(contactId: BoxId) {\r\n        this.customerSettings.invoiceContact = contactId;\r\n        await this.setDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoice(invoiceTypeId: BoxId, invoiceInfoId: BoxId) {\r\n        this.customerSettings.invoiceType = invoiceTypeId;\r\n        this.customerSettings.invoiceInfo = invoiceInfoId;\r\n        await this.setDefaultSettings();\r\n    }\r\n\r\n    async setDefaultSettings() {\r\n        await this.uqs.customer.CustomerSetting.add(this.customerSettings);\r\n    }\r\n}","import { nav, CAppBase, IConstructor } from 'tonva';\r\nimport { CWebUser } from 'webUser/CWebUser';\r\nimport { CMe } from 'me/CMe';\r\nimport { COrder } from 'order/COrder';\r\nimport { UQs } from 'uqs';\r\nimport { VMain } from 'VMain';\r\nimport { CUqBase } from 'CBase';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { WebUser } from 'currentUser';\r\nimport GLOABLE from 'configuration';\r\n\r\nexport class CCustomerServiceApp extends CAppBase {\r\n    get uqs(): UQs { return this._uqs as UQs; }\r\n\r\n    topKey: any;\r\n\r\n    currentSalesRegion: any;\r\n    currentLanguage: any;\r\n    currentUser: WebUser;\r\n\r\n    cWebUser: CWebUser;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n    cOrder: COrder;\r\n\r\n    protected newC<T extends CUqBase>(type: IConstructor<T>): T {\r\n        return new type(this);\r\n    }\r\n\r\n    protected async internalStart() {\r\n\r\n        this.currentSalesRegion = await this.uqs.common.SalesRegion.load(GLOABLE.SALESREGION_CN);\r\n        this.currentLanguage = await this.uqs.common.Language.load(GLOABLE.CHINESE);\r\n        this.currentUser = new WebUser(this.uqs);\r\n        this.currentUser.setUser(this.user);\r\n\r\n        this.cWebUser = this.newC(CWebUser);\r\n        this.cProduct = this.newC(CProduct);\r\n        this.cMe = this.newC(CMe);\r\n        this.cOrder = this.newC(COrder);\r\n\r\n        this.topKey = nav.topKey();\r\n        this.showMain();\r\n    }\r\n\r\n    showMain(initTabName?: string) {\r\n        this.openVPage(VMain, initTabName);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { NavView, AppConfig, start, nav } from 'tonva';\r\nimport { CCustomerServiceApp } from 'CCustomerServiceApp';\r\nimport { tvs } from 'tvs';\r\n\r\nconst appConfig: AppConfig = {\r\n  appName: \"百灵威系统工程部/customer-service\",\r\n  version: \"1.0.3\",                   // 版本变化，缓存的uqs才会重载\r\n  tvs: tvs,\r\n};\r\n\r\nnav.setSettings(appConfig);\r\n\r\nconst App: React.FC = () => {\r\n\r\n  let onLogined = async () => {\r\n    await start(CCustomerServiceApp, appConfig);\r\n  }\r\n\r\n  return <NavView onLogined={onLogined} />;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
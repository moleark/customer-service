{"version":3,"sources":["webUser/VPendingAuditUserList.tsx","tvs/common.tsx","tools/productImage.tsx","tvs/product.tsx","tvs/index.tsx","tvs/webuser.tsx","tvs/customer.tsx","configuration.ts","webUser/VPendingAuditUser.tsx","webUser/VPendingAuditUserRefuse.tsx","CBase.ts","webUser/CWebUser.tsx","me/EditMeInfo.tsx","me/VMe.tsx","me/CMe.tsx","order/VPendingOrderList.tsx","order/VOrderDetail.tsx","order/COrder.tsx","VMain.tsx","product/VProductView.tsx","product/VChemicalInfo.tsx","product/CProduct.tsx","currentUser.ts","CCustomerServiceApp.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["VPendingAuditUserList","renderPendingUser","item","webUser","right","name","className","tv","showUserDetail","user","a","controller","openPendingAuditUserDetail","content","observer","pendingUsers","header","items","none","render","onClick","param","this","getPendingUsers","VPage","tvAddress","values","country","province","city","county","undefined","tvCountry","chineseName","imagePath","altimagePath","ProductImage","props","style","chemicalId","src","substr","altImage","caption","value","tvs","webuser","firstName","salutation","organizationName","departmentName","common","address","currency","customer","contact","mobile","addressString","invoiceInfo","title","taxNo","invoiceType","description","product","productx","brand","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","packx","radiox","radioy","unit","appConfig","GLOABLE_TEST","CHINA","CHINESE","SALESREGION_CN","TIPDISPLAYTIME","schema","type","required","uiSchema","id","visible","widget","label","placeholder","rules","length","teacher","submit","VPendingAuditUser","form","data","pendingOrderList","auditPendingUser","buttonClick","onFormButtonClick","context","ret","tips","role","leftseconds","h","setInterval","setTimeout","clearInterval","backPage","GLOABLE","page","currentAuditingUser","webUserContact","openAuditRefuse","contactInfoUi","telephone","email","href","footer","left","ref","v","formData","onButtonClick","renderPendingOrders","openPage","observable","VPendingAuditUserRefuse","auditPendingUserRefuse","closePage","reason","list","comments","map","CUqBase","_uqs","CBase","CWebUser","CSub","tab","renderView","uqs","AuditPendingUserRefuseReason","search","reasons","openVPage","webUserId","cOrder","cApp","renderPendingOrder","getPendingAuditUser","table","webUserBox","WebUser","load","WebUserContact","obj","uqCustomer","uqWebUser","getCustomerByNo","getBuyerAccountByNo","getCustomerOrganization","BuyerAccountTuid","BuyerAccount","customerNo","teacherNo","trim","customerResult","buyerAccount","teacherBox","buyerAccountNo","teacherBuyerAccount","buyerAccountInner","lastName","xyz","createTime","customerId","organizationBox","save","organization","WebUserBuyerAccount","add","arr1","auditPendingOrder","reasonData","currentAuditingUserId","EditMeInfo","nick","icon","onItemChanged","itemSchema","newValue","preValue","userApi","userSetProp","nav","saveLocalUser","onWebUserChanged","webUserData","changeWebUser","onWebUserContactChanged","webUserContactData","changeWebUserContact","currentUser","gender","fax","zipCode","VMe","changePassword","meInfo","userSpan","String","showLogout","rows","aboutRows","component","iconClass","text","push","showLogin","size","logOutRows","bk","exit","CMe","VPendingOrderList","renderOrder","order","index","openOrderDetail","no","date","pendingOrders","View","VOrderDetail","packsRow","pack","quantity","price","key","parseFloat","toFixed","renderOrderItem","orderItem","packs","renderOrderItemProduct","p","couponUI","offsetUI","remittedUI","freightFeeUI","freightFeeRemittedUI","brief","orderItems","shippingContact","invoiceContact","amount","couponOffsetAmount","couponRemitted","freightFee","freightFeeRemitted","invoiceTypeUI","invoiceInfoUI","invoiceTemplate","COrder","orderId","Order","getSheet","orderitems","orderItemsGrouped","orderItemGroupByProduct","cProduct","renderCartProduct","userSheets","pendingAuditOrders","buyAccount","OrderSheet","OrderBuyerAccount","i","flow","action","packItems","result","cd","cpi","find","e","packRow","color","selected","VMain","cWebUser","cMe","faceTabs","notify","TabCaptionComponent","tabs","VCartProuductView","descriptionC","renderChemicalInfo","productPropItem","renderBrand","VChemicalInfo","productId","chemicalInfo","chemicalInfoContainer","getChemicalInfo","CProduct","ProductChemical","captionClass","capClass","classNames","valClass","guest","token","_user","webUserSettings","setUser","loadWebUser","currentCustomer","WebUserSetting","WebUserCustomer","Customer","init","WebUserContacts","contactId","del","saveDefaultSettings","invoiceTypeId","invoiceInfoId","computed","customerSettings","CustomerContacts","CustomerSetting","setDefaultSettings","CCustomerServiceApp","topKey","currentSalesRegion","currentLanguage","SalesRegion","Language","newC","showMain","initTabName","CAppBase","appName","version","setSettings","App","onLogined","start","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+XAKaA,EAAb,2MAWYC,kBAAoB,SAACC,GAAe,IAClCC,EAAYD,EAAZC,QACFC,EAAQ,gBAAC,IAAD,CAAIC,KAAK,gBAAgBC,UAAU,oCAC/C,OAAO,gBAAC,IAAD,CAAKF,MAAOA,EAAOE,UAAU,OAC/BC,YAAGJ,KAfhB,EAmBYK,eAnBZ,uCAmB6B,WAAOC,GAAP,SAAAC,EAAA,sEACf,EAAKC,WAAWC,2BAA2BH,GAD5B,2CAnB7B,wDAuBYI,QAAUC,aAAS,WAAO,IAExBC,EAAiB,EAAKJ,WAAtBI,aACN,OAAO,gBAAC,IAAD,CAAMC,OAAO,kCAChB,gBAAC,IAAD,CAAMC,MAAOF,EAAcG,KAAK,6CAAUhB,KAAM,CAAEiB,OAAQ,EAAKlB,kBAAmBmB,QAAS,EAAKZ,sBA3B5G,6GAEea,GAFf,yLAMWA,GAEH,OADAC,KAAKX,WAAWY,kBACT,qBAAMV,QAAN,UARf,GAA2CW,K,OCF9BC,EAAY,SAACC,GAAiB,IACjCC,EAAoCD,EAApCC,QAASC,EAA2BF,EAA3BE,SAAUC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAC/B,OAAO,gCACFvB,YAAGoB,GAAUpB,YAAGqB,OAAUG,OAAWA,GAAW,kBAAM,oCAAQxB,YAAGsB,OAAME,OAAWA,GAAW,kBAAM,oCAAQxB,YAAGuB,OAAQC,OAAWA,GAAW,kBAAM,sCAI9IC,EAAY,SAACN,GACtB,OAAO,oCAAIA,EAAOO,YAAX,MCRLC,EAAY,8CACZC,EAAe,qDAQd,SAASC,EAAaC,GAA2B,IAE9CC,EAAiCD,EAAjCC,MAAOhC,EAA0B+B,EAA1B/B,UAAWiC,EAAeF,EAAfE,WACxB,OAAO,gBAAC,IAAD,CAAOC,IAAKD,GAAeL,EAAYK,EAAWE,OAAO,EAAG,GAAK,IAAMF,EAAa,OACvFD,MAAOA,EAAOhC,UAAWA,EAAWoC,SAAUP,ICqBtD,SAASjC,EAAKyC,EAAiBC,GAC3B,OAAc,OAAVA,QAA4Bb,IAAVa,EAA4B,KAC3C,gCACH,uBAAKtC,UAAU,yBAAyBqC,EAAxC,KACA,uBAAKrC,UAAU,SAASsC,IAIzB,I,oBCvCMC,EAAW,CACpBC,QCGmB,CACnBA,QATqB,SAACF,GAAgB,IAChCG,EAA4DH,EAA5DG,UAAWC,EAAiDJ,EAAjDI,WAAYC,EAAqCL,EAArCK,iBAAkBC,EAAmBN,EAAnBM,eAC/C,OAAO,gCACH,uBAAK5C,UAAU,QAAO,8BAASyC,GAA/B,IAAmD,wBAAMzC,UAAU,SAAS0C,IAC5E,uBAAK1C,UAAU,oBAAoB2C,EAAnC,QAA4DC,MDEhEC,OHUkB,CAClBC,QAAS3B,EACTE,QAASK,EACTJ,SAAUI,EACVH,KAAMG,EACNF,OAAQE,EACRqB,SAVsB,SAAC3B,GACvB,OAAO,oCAAIA,EAAOrB,KAAX,OGNPiD,SEuBoB,CACpBC,QA7BqB,SAAC7B,GAAiB,IACjCrB,EAA2DqB,EAA3DrB,KAAMmD,EAAqD9B,EAArD8B,OAAQP,EAA6CvB,EAA7CuB,iBAAkBG,EAA2B1B,EAA3B0B,QAASK,EAAkB/B,EAAlB+B,cAC/C,OAAO,uBAAKnD,UAAU,eAClB,yBACKD,GAFF,QAIKmD,EAJL,SAIqBP,EAAiB,2BACzC,6BAAQ1C,YAAG6C,GAAX,IAAsBK,KAuB1BL,QAAS3B,EACTE,QAASK,EACTJ,SAAUI,EACVH,KAAMG,EACNF,OAAQE,EACR0B,YAjByB,SAAChC,GAAiB,IACrCiC,EAAiBjC,EAAjBiC,MAAOC,EAAUlC,EAAVkC,MACb,OAAO,uBAAKtD,UAAU,eAClB,yBACKqD,GAFF,QAIKC,IAYZC,YAzByB,SAACnC,GAAiB,IACrCoC,EAAgBpC,EAAhBoC,YACN,OAAO,uBAAKxD,UAAU,eACjBwD,KFRLC,QDmCmB,CACnBC,SA1CqB,SAACtC,GACtB,IAAIqC,EAAUrC,EACRuC,EAAwFF,EAAxFE,MAAOH,EAAiFC,EAAjFD,YAAaI,EAAoEH,EAApEG,IAAKC,EAA+DJ,EAA/DI,OAAQC,EAAuDL,EAAvDK,gBAAiBC,EAAsCN,EAAtCM,gBAAiBC,EAAqBP,EAArBO,OAAQC,EAAaR,EAAbQ,SACjF,OAAO,uBAAKjE,UAAU,cAClB,uBAAKA,UAAU,UACX,uBAAKA,UAAU,YACX,uBAAKA,UAAU,UAAS,8BAASwD,KAErC,uBAAKxD,UAAU,OACX,uBAAKA,UAAU,SACX,gBAAC8B,EAAD,CAAcG,WAAYgC,EAAUjE,UAAU,WAElD,uBAAKA,UAAU,SACX,uBAAKA,UAAU,OACVJ,EAAK,MAAOgE,GACZhE,EAAK,eAAMiE,GACXjE,EAAK,qBAAOkE,GACZlE,EAAK,qBAAOmE,GACZnE,EAAK,2BAAQoE,GACb/D,YAAG0D,GAAO,SAACvC,GAAD,OAAiB,gCAAGxB,EAAK,eAAMwB,EAAOrB,gBAwBrEmE,MAhBY,SAAC9C,GAAiB,IACxB+C,EAAyB/C,EAAzB+C,OAAQC,EAAiBhD,EAAjBgD,OAAQC,EAASjD,EAATiD,KACtB,OAAe,IAAXF,EAAqB,gCAAGA,EAAH,MAAcC,EAAQC,GACxC,gCAAGD,EAAQC,MI/BTC,EAEA,QAWPC,EAAe,CACjBC,MAAO,GACPC,QAAS,IACTC,eAAgB,EAChBC,eAAgB,KCbdC,EAAiB,CACnB,CAAE7E,KAAM,KAAM8E,KAAM,KAAMC,UAAU,GACpC,CAAE/E,KAAM,WAAY8E,KAAM,SAAUC,UAAU,GAC9C,CAAE/E,KAAM,UAAW8E,KAAM,SAAUC,UAAU,GAC7C,CAAE/E,KAAM,SAAU8E,KAAM,WAGtBE,EAAqB,CACvBpE,MAAO,CACHqE,GAAI,CAAEC,SAAS,GACfjC,SAAU,CACNkC,OAAQ,OAAQC,MAAO,kBAASC,YAAa,kBAASC,MAAO,SAAC/C,GAC1D,OAAOA,GAASA,EAAMgD,OAAS,GAAK,uEAAkB7D,IAG9D8D,QAAS,CACLL,OAAQ,OAAQC,MAAO,kBAASC,YAAa,kBAASC,MAAO,SAAC/C,GAC1D,OAAOA,GAASA,EAAMgD,OAAS,GAAK,uEAAkB7D,IAG9D+D,OAAQ,CAAEN,OAAQ,SAAUC,MAAO,2BAAQF,SAAS,EAAOjF,UAAW,qBAIjEyF,GAAb,6MAEYC,UAFZ,IAGYC,KAAY,GAHxB,EAIYC,sBAJZ,2CAaYC,iBAbZ,sBAa+B,sBAAAzF,EAAA,yDAClB,EAAKsF,KADa,iEAEjB,EAAKA,KAAKI,YAAY,UAFL,2CAb/B,EAkBYC,kBAlBZ,uCAkBgC,WAAOhG,EAAciG,GAArB,yBAAA5F,EAAA,6DAClBuF,EAASK,EAAQN,KAAjBC,KACA3C,EAAsB2C,EAAtB3C,SAAUuC,EAAYI,EAAZJ,QAEhB,EAAKI,KAAK3C,SAAWA,EACrB,EAAK2C,KAAKJ,QAAUA,EALI,SAOR,EAAKlF,WAAWwF,iBAAiBF,GAPzB,OAOpBM,EAPoB,YAQhBA,EARgB,OASf,IATe,QAcf,IAde,QAmBf,IAnBe,gCAUhB,EAAKC,KAAO,uBAAKlG,UAAU,qBAAqBmG,KAAK,SACjD,gBAAC,IAAD,CAAIpG,KAAK,qBAAqBC,UAAU,4BADhC,0EAVI,oCAehB,EAAKkG,KAAO,uBAAKlG,UAAU,qBAAqBmG,KAAK,SACjD,gBAAC,IAAD,CAAIpG,KAAK,qBAAqBC,UAAU,4BADhC,4FAfI,oCAoBhB,EAAKkG,KAAO,uBAAKlG,UAAU,qBAAqBmG,KAAK,SACjD,gBAAC,IAAD,CAAIpG,KAAK,qBAAqBC,UAAU,4BADhC,4FApBI,oCAyBZoG,EAAc,EAClB,EAAKF,KAAO,uBAAKlG,UAAU,sBAAsBmG,KAAK,SAClD,gBAAC,IAAD,CAAIpG,KAAK,eAAeC,UAAU,sBAD1B,2BACwDoG,GAEhEC,EAAIC,aAAY,WAChBF,IACA,EAAKF,KAAO,uBAAKlG,UAAU,sBAAsBmG,KAAK,SAClD,gBAAC,IAAD,CAAIpG,KAAK,eAAeC,UAAU,sBAD1B,2BACwDoG,KAErE,KACHG,YAAW,WACPC,cAAcH,GACd,EAAKI,aACN,KAtCa,6BAyCxBF,YAAW,WACP,EAAKL,UAAOzE,IACbiF,EAAQ/B,gBA3Ca,4CAlBhC,0DAgEYgC,KAAOnG,aAAS,WAAO,IAAD,EAEqC,EAAKH,WAA9DuG,EAFoB,EAEpBA,oBAAqBC,EAFD,EAECA,eAAgBC,EAFjB,EAEiBA,gBACrC9B,EAAgE4B,EAAhE5B,GAAIvC,EAA4DmE,EAA5DnE,UAAWC,EAAiDkE,EAAjDlE,WAAYC,EAAqCiE,EAArCjE,iBAAkBC,EAAmBgE,EAAnBhE,eAE/CmE,EAAgB,uBAAK/G,UAAU,sBAAf,mGACpB,GAAI6G,EAAgB,CAAC,IACXG,EAA6BH,EAA7BG,UAAW9D,EAAkB2D,EAAlB3D,OAAQ+D,EAAUJ,EAAVI,MACzBF,EAAgB,gCACZ,uBAAK/G,UAAU,oBAAf,iBACA,uBAAKA,UAAU,SAAQ,qBAAGkH,KAAI,cAAShE,IAAWA,IAClD,uBAAKlD,UAAU,oBAAf,iBACA,uBAAKA,UAAU,SAAQ,qBAAGkH,KAAI,cAASF,IAAcA,IACrD,uBAAKhH,UAAU,oBAAf,UACA,uBAAKA,UAAU,SAAQ,qBAAGkH,KAAI,iBAAYD,IAAUA,KAI5D,EAAKtB,KAAKX,GAAKA,EACf,IAAImC,EAAS,gBAAC,IAAD,CACTrH,MAAO,0BAAQ+E,KAAK,SAChB7E,UAAU,sBACVc,QAAS,EAAK+E,kBAFX,gBAGPuB,KACI,0BAAQvC,KAAK,SACT7E,UAAU,8BACVc,QAASgG,GAFb,wBAIR,OAAO,gBAAC,IAAD,CAAMpG,OAAO,6CAAUyG,OAAQA,GAClC,uBAAKnH,UAAU,qBACX,0BAAQA,UAAU,SAASyC,GAD/B,IACmD,wBAAMzC,UAAU,oBAAoB0C,IAEvF,uBAAK1C,UAAU,+BACV+G,EACD,uBAAK/G,UAAU,oBAAf,iBACA,uBAAKA,UAAU,SAAS2C,GACxB,uBAAK3C,UAAU,oBAAf,iBACA,uBAAKA,UAAU,SAAS4C,IAE5B,uBAAK5C,UAAU,iBACX,sBAAIA,UAAU,cAAd,gBACC,EAAKkG,KACN,gBAAC,IAAD,CAAMmB,IAAK,SAAAC,GAAC,OAAI,EAAK5B,KAAO4B,GAAG1C,OAAQA,EACnCG,SAAUA,EACVwC,SAAU,EAAK5B,KACf3F,UAAU,gBACVwH,cAAe,EAAKzB,qBAE5B,uBAAK/F,UAAU,iBACX,sBAAIA,UAAU,cAAd,8CACC,EAAK4F,sBAlHtB,6GAOe7E,GAPf,8EAQc6F,EAAwB5F,KAAKX,WAA7BuG,oBARd,SASsC5F,KAAKX,WAAWoH,oBAAoBb,EAAoB5B,IAT9F,OASQhE,KAAK4E,iBATb,OAUQ5E,KAAK0G,SAAS1G,KAAK2F,KAAM5F,GAVjC,4GAAuCG,KAAvC,kCAKKyG,KALL,iE,QCzBM/C,EAAiB,CACnB,CAAE7E,KAAM,KAAM8E,KAAM,KAAMC,UAAU,GACpC,CAAE/E,KAAM,SAAU8E,KAAM,KAAMC,UAAU,GACxC,CAAE/E,KAAM,WAAY8E,KAAM,SAAUC,UAAU,GAC9C,CAAE/E,KAAM,SAAU8E,KAAM,WAGf+C,GAAb,qPAQY7B,kBARZ,uCAQgC,WAAOhG,EAAciG,GAArB,mBAAA5F,EAAA,sDAElBuF,EAASK,EAAQN,KAAjBC,KACN,EAAKtF,WAAWwH,uBAAuBlC,GACnCS,EAAc,EAClB,EAAKF,KAAO,uBAAKlG,UAAU,sBAAsBmG,KAAK,SAClD,gBAAC,IAAD,CAAIpG,KAAK,eAAeC,UAAU,sBAD1B,2BACwDoG,GAEhEC,EAAIC,aAAY,WAChBF,IACA,EAAKF,KAAO,uBAAKlG,UAAU,sBAAsBmG,KAAK,SAClD,gBAAC,IAAD,CAAIpG,KAAK,eAAeC,UAAU,sBAD1B,2BACwDoG,KAErE,KACHG,YAAW,WACPC,cAAcH,GACd,EAAKyB,UAAU,KAChB,KAjBqB,2CARhC,0DA4BY/C,SAAqB,CACzBpE,MAAO,CACHqE,GAAI,CAAEC,SAAS,GACf8C,OAAQ,CAAE7C,OAAQ,QAASC,MAAO,2BAAQ6C,KAAM,IAChDC,SAAU,CACN/C,OAAQ,OAAQC,MAAO,eAAMC,YAAa,eAAMC,MAAO,SAAC/C,GACpD,OAAOA,GAASA,EAAMgD,OAAS,IAAM,6EAAmB7D,IAGhE+D,OAAQ,CAAEN,OAAQ,SAAUC,MAAO,iCAASF,SAAS,EAAMjF,UAAW,2BArClF,EAyCY2G,KAAOnG,aAAS,WACpB,OAAO,gBAAC,IAAD,CAAME,OAAO,kCAChB,gBAAC,IAAD,CAAMkE,OAAQA,EACV5E,UAAU,YACV+E,SAAU,EAAKA,SAAUyC,cAAe,EAAKzB,oBAChD,EAAKG,SA9ClB,6GAGenF,GAHf,iEAISC,KAAK+D,SAASpE,MAAMoH,OAAmBC,KAAQjH,EAAgBmH,KAAI,SAAAZ,GAAO,MAAO,CAAEhF,MAAOgF,EAAEtC,GAAI3B,MAAOiE,EAAE9D,gBAC1GxC,KAAK0G,SAAS1G,KAAK2F,MAL3B,4GAA6CzF,KAA7C,kCAEKyG,KAFL,iECVsBQ,EAAtB,4KAC+B,OAAOnH,KAAKoH,SAD3C,GAAsCC,KCGzBC,GDCwBC,ICDrC,6PAII3B,yBAJJ,IAKIC,oBALJ,IAWI2B,IAAM,kBAAM,EAAKC,WAAW/I,IAXhC,EA6EIoH,gBA7EJ,sBA6EsB,4BAAA1G,EAAA,sEAEM,EAAKsI,IAAIlG,QAAQmG,6BAA6BC,YAAOnH,EAAW,EAAG,KAFzE,OAEVoH,EAFU,OAGd,EAAKC,UAAUlB,EAAyBiB,GAH1B,2CA7EtB,EAsGIpB,oBAtGJ,uCAsG0B,WAAOsB,GAAP,eAAA3I,EAAA,6DACZ4I,EAAW,EAAKC,KAAhBD,OADY,SAELA,EAAOE,mBAAmBH,GAFrB,mFAtG1B,2eAckC/H,KAAK0H,IAAIlG,QAAQ2G,oBAAoBC,WAAM3H,GAd7E,OAcQT,KAAKP,aAdb,uMAiBqCN,GAjBrC,gFAkBuBkJ,EAAelJ,EAAxBN,QACAmF,EAAOqE,EAAPrE,GAnBd,SAoByChE,KAAK0H,IAAIlG,QAAQ8G,QAAQC,KAAKvE,GApBvE,cAoBQhE,KAAK4F,oBApBb,gBAqBoC5F,KAAK0H,IAAIlG,QAAQgH,eAAeC,IAAI,CAAE5J,QAASmF,IArBnF,OAqBQhE,KAAK6F,eArBb,OAsBQ7F,KAAK8H,UAAUrD,GAtBvB,uLA6B2BE,GA7B3B,4HA+B2D3E,KAAK0H,IAAxCgB,EA/BxB,EA+Bc1G,SAA+B2G,EA/B7C,EA+BoCnH,QACtBoH,EAAkGF,EAAlGE,gBAAiBC,EAAiFH,EAAjFG,oBAAqBC,EAA4DJ,EAA5DI,wBAAuCC,EAAqBL,EAAnCM,aAE/DhF,EAAiDW,EAAjDX,GAAciF,EAAmCtE,EAA7C3C,SAA+BkH,EAAcvE,EAAvBJ,QAC3B0E,EAnCb,yCAoCmB,GApCnB,uBAqCmCL,EAAgBH,IAAI,CAAEQ,WAAYA,EAAWE,SArChF,UAqCYC,EArCZ,iDAuCmB,GAvCnB,WAwCcpH,EAAaoH,EAAbpH,SAEFqH,EAAerH,GACfkH,EA3CZ,kCA6CmCN,EAAgBH,IAAI,CAAEQ,WAAYC,EAAUC,SA7C/E,WA6CgBG,EA7ChB,iDA+CuB,GA/CvB,yBAiD4CT,EAAoBJ,IAAI,CAAEc,eAAgBL,IAjDtF,WAiDgBM,EAjDhB,+BAoDgCC,EAAsBH,EAAhCtH,SACAgC,EAAmDyF,EAAnDzF,GAAIjF,EAA+C0K,EAA/C1K,KAA+C0K,EAAzChI,UAAyCgI,EAA9BC,SAAUC,EAAoBF,EAApBE,IAAKC,EAAeH,EAAfG,WArD1D,UAsD4Cd,EAAwBL,IAAI,CAAEoB,WAAY7F,IAtDtF,eAsDoB8F,EAtDpB,iBAuD4Cf,EAAiBgB,UAAKtJ,EAC9C,CACI,aAAgBqJ,GAAmBA,EAAgBE,aACnD,YAAejL,EAAM,IAAO4K,EAAK,GAAMT,EAAW,WAAcU,EAAY,QAAW,IA1D/G,QAuDgBJ,EAvDhB,OA6DgBH,EAAeG,EA7D/B,eAgEcS,EAA+DtB,EAA/DsB,oBAAqBpF,EAA0C8D,EAA1C9D,iBAAkBsD,EAAwBQ,EAAxBR,oBAhErD,UAkEc8B,EAAoBC,IAAI,CAAErL,QAASmF,EAAImG,KAAM,CAAC,CAAEd,aAAcA,MAlE5E,yBAmEcxE,EAAiBL,OAAO,CAAER,GAAIA,EAAI6F,WAAY7H,IAnE5D,eAoEcgG,EAAWhI,KAAKiI,KAAhBD,OApEd,UAqEcA,EAAOoC,kBAAkBpG,EAAIqF,GArE3C,yBAuEkClB,EAAoBC,WAAM3H,GAvE5D,QAuEQT,KAAKP,aAvEb,qMAwFiC4K,GAxFjC,kFAyFctD,EAAqBsD,EAArBtD,OAAQE,EAAaoD,EAAbpD,SACJqD,EAA0BtK,KAAK4F,oBAAnC5B,GA1Fd,SA2FchE,KAAK0H,IAAIlG,QAAQqF,uBAAuBrC,OAAO,CAAER,GAAIsG,EAAuBvD,OAAQA,EAAQE,SAAUA,IA3FpH,uBAgGkCjH,KAAK0H,IAAIlG,QAAQ2G,oBAAoBC,WAAM3H,GAhG7E,OAgGQT,KAAKP,aAhGb,mHAA8B0H,GAA9B,0CAEKR,KAFL,iE,QCSO,IAAM4D,GAAb,cAsBI,WAAYxJ,GAAa,IAAD,uBACpB,4CAAMA,KAjBF6C,OAAuB,CAC3B,CAAE7E,KAAM,OAAQ8E,KAAM,UACtB,CAAE9E,KAAM,OAAQ8E,KAAM,UAcF,EAZhBE,SAAqB,CACzBpE,MAAO,CACH6K,KAAM,CAAEtG,OAAQ,OAAQC,MAAO,eAAMC,YAAa,0DAClDqG,KAAM,CAAEvG,OAAQ,QAASC,MAAO,kBAShB,4IA8BhBuG,cA9BgB,uCA8BA,WAAOC,EAAwBC,EAAeC,GAA9C,eAAAzL,EAAA,6DACdL,EAAS4L,EAAT5L,KADc,SAEd+L,IAAQC,YAAYhM,EAAM6L,GAFZ,OAGpB,EAAKjG,KAAK5F,GAAQ6L,EAClBI,IAAI7L,KAAKJ,GAAQ6L,EACjBI,IAAIC,gBALgB,2CA9BA,4DAsChBC,iBAtCgB,uCAsCG,WAAOP,EAAwBC,EAAeC,GAA9C,eAAAzL,EAAA,6DACjBL,EAAS4L,EAAT5L,KACN,EAAKoM,YAAYpM,GAAQ6L,EAFF,SAGjB,EAAKvL,WAAW+L,cAAc,EAAKD,aAHlB,2CAtCH,4DA4ChBE,wBA5CgB,uCA4CU,WAAOV,EAAwBC,EAAeC,GAA9C,eAAAzL,EAAA,6DACxBL,EAAS4L,EAAT5L,KACN,EAAKuM,mBAAmBvM,GAAQ6L,EAFF,SAGxB,EAAKvL,WAAWkM,qBAAqB,EAAKD,oBAHlB,2CA5CV,4DAkDhB3F,KAAO,WAAO,IAAD,iBACX/B,EADW,EACXA,OAAQG,EADG,EACHA,SAAUY,EADP,EACOA,KAAM+F,EADb,EACaA,cAC9B,OAAO,gBAAC,IAAD,CAAMhL,OAAO,4BAChB,gBAAC,IAAD,CAAMkE,OAAQA,EAAQG,SAAUA,EAC5BY,KAAMA,EACN+F,cAAeA,MAvDH,MAECM,IAAI7L,KAAnBqL,EAFc,EAEdA,KAAMC,EAFQ,EAERA,KACZ,EAAK9F,KAAO,CACR6F,KAAMA,EACNC,KAAMA,GALU,MAQL,EAAKpL,WAAd4I,KAE6DuD,YAD7D/J,EATc,EASdA,UAAWgK,EATG,EASHA,OAAQ/J,EATL,EASKA,WAAYC,EATjB,EASiBA,iBAAkBC,EATnC,EASmCA,eAAgBoE,EATnD,EASmDA,UACjE9D,EAVc,EAUdA,OAAQ+D,EAVM,EAUNA,MAAOyF,EAVD,EAUCA,IAAKC,EAVN,EAUMA,QAAS7J,EAVf,EAUeA,QAASK,EAVxB,EAUwBA,cAVxB,OAWpB,EAAKgJ,YAAc,CACf1J,UAAWA,EACXgK,OAAQA,EACR/J,WAAYA,EACZC,iBAAkBA,EAClBC,eAAgBA,GAGpB,EAAK0J,mBAAqB,CACtBtF,UAAWA,EACX9D,OAAQA,EACR+D,MAAOA,EACPyF,IAAKA,EACL5J,QAASA,EACTK,cAAeA,EACfwJ,QAASA,GA1BO,EAtB5B,2GAEe5L,GAFf,iEAGQC,KAAK0G,SAAS1G,KAAK2F,MAH3B,4GAAgCzF,KAAhC,kCAgBKyG,KAhBL,uGAkBKA,KAlBL,8GAoBKA,KApBL,iECPO,IAAMiF,EAAb,2MAUYC,eAVZ,sBAU6B,sBAAAzM,EAAA,sEACf4L,IAAIa,iBADW,2CAV7B,EAcYC,OAAStM,aAAS,WAAO,IACvBL,EAAS6L,IAAT7L,KACN,QAAasB,IAATtB,EAAoB,OAAO,KAFH,IAGtB6E,EAAyB7E,EAAzB6E,GAAIjF,EAAqBI,EAArBJ,KAAMyL,EAAerL,EAAfqL,KAAMC,EAAStL,EAATsL,KACtB,OAAO,gBAAC,IAAD,CAAKzL,UAAU,4BAClBoH,KAAM,gBAAC,IAAD,CAAOpH,UAAU,iBAAiBkC,IAAKuJ,IAC7C3L,MAAO,gBAAC,IAAD,CAAIE,UAAU,iBAAiBD,KAAK,gBAC3Ce,QAAS,WACL,EAAKgI,UAAUyC,KAEnB,2BACI,2BAkEhB,SAAkBxL,EAAcyL,GAC5B,OAAOA,EACH,gCAAE,yBAAIA,EAAJ,SAAiB,yBAAOxL,UAAU,SAASD,KAC3C,yBAAIA,GArEQgN,CAAShN,EAAMyL,IACrB,uBAAKxL,UAAU,SAAQ,wBAAMA,UAAU,cAAhB,OAAvB,IAAgEgF,EAAK,IAAQA,EAAKgI,OAAOhI,EAAK,KAAO7C,OAAO,SA1B5H,6GAEepB,GAFf,yLAOQiL,IAAIiB,eAPZ,+BA+Bc,IAcFC,EAbI/M,EAAS6L,IAAT7L,KACJgN,EAAoB,CACpB,GACA,CACItI,KAAM,YACNuI,UAAW,uBAAKpN,UAAU,wCACtB,gBAAC,IAAD,CAAUqN,UAAU,iBAAiB5B,KAAK,UAAU6B,KAAK,0BACzD,uBAAKtN,UAAU,cAAf,IAA8BsE,KAGtC,IAIJ,QAAa7C,IAATtB,GACA+M,EAAOC,GACFI,KACD,CACI1I,KAAM,YACNuI,UAAW,0BAAQpN,UAAU,6BAA6Bc,QAAS,kBAAMkL,IAAIwB,eAAU/L,GAAW,KAC9F,gBAAC,IAAD,CAAI1B,KAAK,WAAW0N,KAAK,OADlB,6BAMlB,CAAC,IAAD,EACGC,EAAqB,CACrB,GACA,CACI7I,KAAM,YACN8I,GAAI,GACJP,UAAW,0BAAQpN,UAAU,uBAAuBc,QAASE,KAAK4M,MAC9D,gBAAC,IAAD,CAAI7N,KAAK,WAAW0N,KAAK,OADlB,gCAmBnB,EAbAP,EAAO,CACH,GACA,CACIrI,KAAM,YACNuI,UAAW,qBAAMN,OAAN,OAEf,GACA,CACIjI,KAAM,YACNuI,UAAW,gBAAC,IAAD,CAAUC,UAAU,iBAAiB5B,KAAK,MAAM6B,KAAK,6BAChExM,QAASE,KAAK6L,kBAGjBU,KAAL,QAAaJ,EAAb,OAA2BO,IAE/B,OAAO,gBAAC,IAAD,CAAMhN,OAAO,gBAChB,gBAAC,IAAD,CAAUwM,KAAI,YAAMA,GAAO9L,OAAQ,KADhC,SApFf,GAAyBF,KCLlB,IAAM2M,EAAb,2MAeIrF,IAAM,kBAAM,EAAKC,WAAWmE,IAfhC,gWAKwB/M,GALxB,8EAMc2M,EAAgBxL,KAAKiI,KAArBuD,YANd,SAOcA,EAAYJ,cAAcvM,GAPxC,2LAU+BgH,GAV/B,8EAWc2F,EAAgBxL,KAAKiI,KAArBuD,YAXd,SAYcA,EAAYD,qBAAqB1F,GAZ/C,4GAAyBsB,GCCZ2F,EAAb,2MAEYC,YAAc,SAACC,EAAYC,GAAmB,IAC5CC,EAAoB,EAAK7N,WAAzB6N,gBACAlJ,EAAiBgJ,EAAjBhJ,GAAImJ,EAAaH,EAAbG,GAAIC,EAASJ,EAATI,KACd,OAAO,uBAAKpO,UAAU,6CAA6Cc,QAAS,kBAAMoN,EAAgBlJ,KAC9F,2BAAK,wBAAMhF,UAAU,oBAAhB,8BAAgD,8BAASmO,IAC9D,uBAAKnO,UAAU,oBAAmB,gBAAC,IAAD,CAAUoO,KAAMA,OAP9D,sEAWWC,GACH,OAAO,gBAAC,IAAD,CAAM1N,MAAO0N,EAAezO,KAAM,CAAEiB,OAAQG,KAAK+M,aAAenN,KAAK,6CAZpF,GAAuC0N,KCE1BC,GAAb,2MAMYC,SAAW,SAAC5O,EAAWqO,GAAmB,IACxCQ,EAA0B7O,EAA1B6O,KAAMC,EAAoB9O,EAApB8O,SAAUC,EAAU/O,EAAV+O,MAEtB,OAAO,uBAAKC,IAAKX,EAAOjO,UAAU,wBAC9B,uBAAKA,UAAU,6BACX,uBAAKA,UAAU,eAAc,yBAAIC,YAAGwO,KACpC,uBAAKzO,UAAU,yBACX,wBAAMA,UAAU,kBAAiB,qCAAiB6O,YAAYF,EAAQD,GAAUI,QAAQ,KACxF,yBAAO9O,UAAU,cAAjB,QAAiC6O,WAAWF,EAAMG,QAAQ,IAA1D,SAAkEJ,EAAlE,SAdpB,EAoBYK,gBAAkB,SAACC,GAAoB,IACrCvL,EAAmBuL,EAAnBvL,QAASwL,EAAUD,EAAVC,MAD2B,iBAEpC5O,EAFoC,EAEpCA,WAAYmO,EAFwB,EAExBA,SAClB,OAAO,2BACH,uBAAKxO,UAAU,gBACX,uBAAKA,UAAU,iBAAiBK,EAAW6O,uBAAuBzL,IAClE,uBAAKzD,UAAU,YACXiP,EAAM/G,KAAI,SAACiH,EAAGlB,GACV,OAAOO,EAASW,EAAGlB,UA5B3C,EAmCYtH,KAAO,SAACqH,GAAgB,IAMxBoB,EAEIC,EAAUC,EAsBdC,EAAcC,EA5BZC,EAAgBzB,EAAhByB,MAAO9J,EAASqI,EAATrI,KACPwI,EAAOsB,EAAPtB,GACAuB,EACmC/J,EADnC+J,WAAY3M,EACuB4C,EADvB5C,SAAU4M,EACahK,EADbgK,gBAAiBC,EACJjK,EADIiK,eAAgBrM,EACpBoC,EADoBpC,YAAaH,EACjCuC,EADiCvC,YAAayM,EAC9ClK,EAD8CkK,OAAQC,EACtDnK,EADsDmK,mBAAoBC,EAC1EpK,EAD0EoK,eAC7GC,EAAmCrK,EAAnCqK,WAAYC,EAAuBtK,EAAvBsK,oBAEdH,GAAsBC,KAElBD,IACAT,EAAW,uBAAKrP,UAAU,2CACtB,uBAAKA,UAAU,cAAf,iBACA,uBAAKA,UAAU,0BAAyB,qCAAiB8P,KAG7DC,IACAT,EAAa,uBAAKtP,UAAU,2CACxB,uBAAKA,UAAU,cAAf,iBACA,uBAAKA,UAAU,0BAAyB,qCAAiB+P,KAGjEX,EAAW,uBAAKpP,UAAU,oCACtB,uBAAKA,UAAU,oBAAf,uBACA,uBAAKA,UAAU,SACVqP,EACAC,KAMTU,IACAT,EAAe,gCACX,uBAAKvP,UAAU,0BAAyB,qCAAiBgQ,IAEzDC,IACAT,EAAuB,gCACnB,uBAAKxP,UAAU,0BAAyB,qCAAiBiQ,EAAzD,qBAKZ,IAAIvP,EAAS,6DAASyN,GACtB,OAAO,gBAAC,IAAD,CAAMzN,OAAQA,GACjB,gBAAC,IAAD,CAAMC,MAAO+O,EAAY9P,KAAM,CAAEiB,OAAQ,EAAKkO,mBAC9C,uBAAK/O,UAAU,oCACX,uBAAKA,UAAU,oBAAf,6BACA,uBAAKA,UAAU,SAASC,YAAG0P,KAE/B,uBAAK3P,UAAU,oCACX,uBAAKA,UAAU,oBAAf,6BACA,uBAAKA,UAAU,SAASC,YAAG2P,KAE/B,uBAAK5P,UAAU,oCACX,uBAAKA,UAAU,oBAAf,6BACA,uBAAKA,UAAU,SAc/B,SAAyBuD,EAAoBH,GACzC,OAAO,gCACFnD,YAAGsD,EAAa2M,QAAezO,GAAW,kBAAM,oCAAO,2BACvDxB,YAAGmD,EAAa+M,QAAe1O,GAAW,kBAAM,qCAjBjB2O,CAAgB7M,EAAaH,KAEzD,uBAAKpD,UAAU,oCACX,uBAAKA,UAAU,oBAAf,iBACA,uBAAKA,UAAU,SAASuP,EAAcC,IAEzCJ,EACD,uBAAKpP,UAAU,gCACX,wBAAMA,UAAU,gCAAhB,uBAAqD6P,EAAQ5P,YAAG8C,OAlGhF,6GAEeiL,GAFf,iEAGQhN,KAAK0G,SAAS1G,KAAK2F,KAAMqH,GAHjC,4GAAkC9M,KA+GlC,SAASgP,GAAc9O,GAAc,IAC3BoC,EAAgBpC,EAAhBoC,YACN,OAAO,gCAAGA,GAGd,SAAS2M,GAAc/O,GAAc,IAC3BiC,EAAUjC,EAAViC,MACN,OAAO,gCAAGA,GCvHP,IAAMgN,GAAb,2MAmCInC,gBAnCJ,uCAmCsB,WAAOoC,GAAP,qBAAAlQ,EAAA,sEAEI,EAAKsI,IAAIsF,MAAMuC,MAAMC,SAASF,GAFlC,OAEVtC,EAFU,OAGRrI,EAASqI,EAATrI,KACA8K,EAAe9K,EAAf8K,WACFC,EAAoBC,GAAwBF,GAChD9K,EAAK+J,WAAagB,EAClB,EAAK5H,UAAUyF,GAAcP,GAPf,2CAnCtB,wDA6CIkB,uBAAyB,SAACzL,GAEtB,OADmB,EAAKwF,KAAlB2H,SACUC,kBAAkBpN,IA/C1C,sHAEwB1C,GAFxB,8OAK6BgI,GAL7B,uFAOuC/H,KAAK0H,IAAIsF,MAAMuC,MAAMO,WAAW,WAAY/H,EAAW,EAAG,KAPjG,cAOYgI,EAPZ,yBAQe/P,KAAKyH,WAAWqF,EAAmBiD,IARlD,wLAW4BhI,EAAmBiI,GAX/C,8FAYuDhQ,KAAK0H,IAAIsF,MAA3CiD,EAZrB,EAYcV,MAAmBW,EAZjC,EAYiCA,kBAZjC,SAcuCD,EAAWH,WAAW,WAAY/H,EAAW,EAAG,KAdvF,OAcYgI,EAdZ,OAeiBI,EAAI,EAfrB,YAewBA,EAAIJ,EAAmBzL,QAf/C,wBAgBgB0I,EAAQ+C,EAAmBI,GACzBnM,EAAagJ,EAAbhJ,GAAIoM,EAASpD,EAAToD,KAjBtB,UAmBkBF,EAAkBhG,IAAI,CAAE8C,MAAOA,EAAO7C,KAAM,CAAC,CAAEd,aAAc2G,MAnB/E,yBAoBkBC,EAAWI,OAAOrM,EAAIoM,EAAM,WAAY,QApB1D,QAeuDD,IAfvD,8HAA4BhJ,GAmDrB,SAASwI,GAAwBW,GACpC,IAAIC,EAAgB,GADkC,uBAEtD,IAFsD,IAEtD,EAFsD,iBAE7CC,EAF6C,QAG5C/N,EAA6C+N,EAA7C/N,QAASgL,EAAoC+C,EAApC/C,KAAMC,EAA8B8C,EAA9B9C,SAAUC,EAAoB6C,EAApB7C,MAAO5L,EAAayO,EAAbzO,SAClC0O,EAAMF,EAAOG,MAAK,SAAAC,GAAC,OAAIA,EAAElO,QAAQuB,KAAOvB,EAAQuB,WACxCvD,IAARgQ,IACAA,EAAM,CAAEhO,QAASA,EAASwL,MAAO,IACjCsC,EAAOhE,KAAKkE,IAEhB,IAAIG,EAAe,CACfnD,KAAMA,EACNE,MAAOA,EACPD,SAAUA,EACV3L,SAAUA,GAAYA,EAASiC,IAEnCyM,EAAIxC,MAAM1B,KAAKqE,IAbnB,EAAeN,EAAf,+CAA2B,IAF2B,kFAiBtD,OAAOC,ECrEX,I,kBAAMM,GAAQ,SAACC,GAAD,OAAoC,IAAbA,EAAoB,eAAiB,cAE7DC,GAAb,2MAIIlR,OAAS,SAACE,GAA8B,IAAD,EACX,EAAKV,WAAvB2R,EAD6B,EAC7BA,SAAUC,EADmB,EACnBA,IACZC,EAAW,CACX,CAAEnS,KAAM,OAAQoF,MAAO,eAAMsG,KAAM,OAAQlL,QAASyR,EAASxJ,IAAK2J,YAAQ1Q,GAC1E,CAAE1B,KAAM,KAAMoF,MAAO,eAAMsG,KAAM,OAAQlL,QAAS0R,EAAIzJ,MACxDN,KAAI,SAAAZ,GAAM,IACFvH,EAAuCuH,EAAvCvH,KAAMoF,EAAiCmC,EAAjCnC,MAAOsG,EAA0BnE,EAA1BmE,KACnB,MAAO,CACH1L,KAAMA,EACNsC,QAAS,SAACyP,GAAD,OAAuBM,YAAoBjN,EAAOsG,EAAMoG,GAAMC,KACvEvR,QAJyC+G,EAApB/G,QAKrB4R,OALyC7K,EAAX6K,WAQtC,OAAO,gBAAC,IAAD,CAAMzR,QAAQ,GACjB,gBAAC,IAAD,CAAM2R,KAAMH,MAnBxB,6GACenR,GADf,iEAEQC,KAAK0G,SAAS1G,KAAKH,QAF3B,4GAA2BK,K,oBCDdoR,GAAb,2MAOYzB,kBAAoB,SAACpN,GAAkB,IACrCE,EAAuDF,EAAvDE,MAAOH,EAAgDC,EAAhDD,YAAa+O,EAAmC9O,EAAnC8O,aAAcvO,EAAqBP,EAArBO,OAAQC,EAAaR,EAAbQ,SAEhD,OAAO,uBAAKjE,UAAU,wBAClB,uBAAKA,UAAU,UACX,uBAAKA,UAAU,QACX,8BAASwD,IAEb,uBAAKxD,UAAU,QACX,8BAASuS,IAEb,uBAAKvS,UAAU,OACX,uBAAKA,UAAU,SACX,gBAAC8B,EAAD,CAAcG,WAAYgC,EAAUjE,UAAU,eAElD,uBAAKA,UAAU,SACX,uBAAKA,UAAU,OACV,EAAKK,WAAWmS,mBAAmB/O,GACnCgP,GAAgB,eAAMzO,GACtB/D,YAAG0D,EAAO+O,UA1BvC,sEAEW3R,GACH,OAAO,gCAAGd,YAAGc,EAAOC,KAAK6P,wBAHjC,GAAuCvC,KCA1BqE,IDoCsBrE,ICpCnC,2MASY/N,QAAUC,aAAS,SAACO,GAAgB,IAElC6R,EAAc7R,EAAd6R,UAEFC,EAD4B,EAAKxS,WAA/ByS,sBACmCF,GACzC,QAAqBnR,IAAjBoR,EAA4B,CAAC,IACvBhP,EAAgBgP,EAAhBhP,OAAQD,EAAQiP,EAARjP,IACd,OAAO,gCACF6O,GAAgB,MAAO7O,GACvB6O,GAAgB,eAAM5O,IAG/B,OAAO,oCArBf,sEAEW9C,GAA0B,IACnB6R,EAAc7R,EAAlBiE,GAGN,OAFqBhE,KAAfX,WACK0S,gBAAgBH,GACpB,qBAAMrS,QAAN,CAAcqS,UAAWA,QANxC,GAAmCtE,MCOtB0E,IAAb,wQAMIR,mBAAqB,SAAC/O,GAClB,OAAO,EAAKgF,WAAWkK,GAAelP,IAP9C,EAUIsP,gBAVJ,uCAUsB,WAAOH,GAAP,SAAAxS,EAAA,8DACgCqB,IAA1C,EAAKqR,sBAAsBF,GADjB,gCAEoC,EAAKlK,IAAIjF,QAAQwP,gBAAgBxJ,IAAI,CAAEhG,QAASmP,IAFpF,OAEV,EAAKE,sBAAsBF,GAFjB,kDAVtB,wDAgBI/B,kBAAoB,SAACpN,GACjB,OAAO,EAAKgF,WAAW6J,GAAmB7O,IAjBlD,sHAGkC1C,GAHlC,iKAA8BoH,GAA9B,qDACKR,KADL,wEACsE,MADtE,IAqBO,SAAS+K,GAAY/O,GACxB,OAAO8O,GAAgB,eAAM9O,EAAM5D,MAGhC,SAAS0S,GAAgBpQ,EAAiBC,EAAY4Q,GACzD,GAAc,OAAV5Q,QAA4Bb,IAAVa,GAAiC,MAAVA,EAAe,OAAO,KACnE,IAAI6Q,EAAWD,EAAeE,KAAWF,GAAgBE,KAAW,cAChEC,EAAWH,EAAeE,KAAWF,GAAgB,GACzD,OAAO,gCACH,uBAAKlT,UAAWoT,KAAW,4BAA6BD,IAAxD,IAAqE9Q,GACrE,uBAAKrC,UAAWoT,KAAW,iBAAkBC,IAAY/Q,ICtC1D,IAAMgH,IAAb,cAkCI,WAAYZ,GAAW,IAAD,gCAhCtB1D,QAgCsB,OA/BtBjF,UA+BsB,OA9BtByL,UA8BsB,OA7BtBC,UA6BsB,OA5BtB6H,WA4BsB,OA3BtBC,WA2BsB,6CAxBtB9G,YAwBsB,OAvBtB/J,gBAuBsB,oDArBtBE,oBAqBsB,OAnBtBoE,eAmBsB,0CAjBtBC,WAiBsB,OAhBtByF,SAgBsB,OAftB5J,aAesB,OAdtBK,mBAcsB,OAbtBwJ,aAasB,OAPd6G,WAOc,OALdC,qBAKc,OAHd/K,SAGc,OAItBgL,QAJsB,uCAIZ,WAAOvT,GAAP,SAAAC,EAAA,8DACOqB,IAATtB,EADE,wBAEF,EAAKqT,MAAQrT,EACb,EAAK6E,GAAK7E,EAAK6E,GACf,EAAKjF,KAAOI,EAAKJ,KACjB,EAAKyL,KAAOrL,EAAKqL,KACjB,EAAKC,KAAOtL,EAAKsL,KACjB,EAAK6H,MAAQnT,EAAKmT,MAClB,EAAKC,MAAQpT,EAAKoT,MARhB,UAUI,EAAKI,cAVT,4CAJY,2DAwDtBC,qBAxDsB,EAClB5S,KAAK0H,IAAMA,EAnCnB,0DAuBQ,YAAgCjH,IAAzBT,KAAK4S,iBACP5S,KAAKkC,QAAUlC,KAAKyB,WAAazB,KAAK2B,qBAxBnD,oMAqDcqC,EAAchE,KAAdgE,QACQvD,IADMT,KAAVwS,MArDlB,iCAuDgCxS,KAAK0H,IAAIlG,QAAQ8G,QAAQC,KAAKvE,GAvD9D,cAuDgBnF,EAvDhB,UAyDsB4C,EAAoE5C,EAApE4C,UAAWgK,EAAyD5M,EAAzD4M,OAAQ/J,EAAiD7C,EAAjD6C,WAAYC,EAAqC9C,EAArC8C,iBAAkBC,EAAmB/C,EAAnB+C,eACvD5B,KAAKyB,UAAYA,EACjBzB,KAAKyL,OAASA,EACdzL,KAAK0B,WAAaA,EAClB1B,KAAK2B,iBAAmBA,EACxB3B,KAAK4B,eAAiBA,GA9DtC,SAgEgC5B,KAAK0H,IAAIlG,QAAQgH,eAAeC,IAAI,CAAE5J,QAASmB,KAAKgE,KAhEpF,cAgEgB/B,EAhEhB,UAkEsB+D,EAAmE/D,EAAnE+D,UAAW9D,EAAwDD,EAAxDC,OAAQ+D,EAAgDhE,EAAhDgE,MAAOyF,EAAyCzJ,EAAzCyJ,IAAK5J,EAAoCG,EAApCH,QAASK,EAA2BF,EAA3BE,cAAewJ,EAAY1J,EAAZ0J,QAC7D3L,KAAKgG,UAAYA,EACjBhG,KAAKkC,OAASA,EACdlC,KAAKiG,MAAQA,EACbjG,KAAK0L,IAAMA,EACX1L,KAAK8B,QAAUA,EACf9B,KAAKmC,cAAgBA,EACrBnC,KAAK2L,QAAUA,GAzE/B,UA2EyC3L,KAAK0H,IAAIlG,QAAQqR,eAAepK,IAAI,CAAE5J,QAASmB,KAAKgE,KA3E7F,kDA2EsG,CAAEnF,QAASmB,KAAKgE,IA3EtH,eA2EYhE,KAAKyS,gBA3EjB,eA4E8BzS,KAAK0H,IAAIlG,QAAQsR,gBAAgBrK,IAAI,CAAE5J,QAASmB,KAAKgE,KA5EnF,gBA6E0BvD,KADVa,EA5EhB,gCA8EgBtB,KAAK4S,gBAAkB,IAAIG,GAASzR,EAAMU,SAAUhC,KAAK0H,KA9EzE,UA+EsB1H,KAAK4S,gBAAgBI,OA/E3C,qQAkGqBhT,KAAK0H,IAAIlG,QAAQyR,gBAAgB7K,MAAM,CAAEvJ,QAASmB,KAAKgE,KAlG5E,wNAqGqBkP,GArGrB,iFA4GclT,KAAK0H,IAAIlG,QAAQyR,gBAAgB/I,IAAI,CAAErL,QAASmB,KAAKgE,GAAImG,KAAM,CAAC,CAAElI,QAASiR,MA5GzF,iLA+GqBA,GA/GrB,iFAsHclT,KAAK0H,IAAIlG,QAAQyR,gBAAgBE,IAAI,CAAEtU,QAASmB,KAAKgE,GAAImG,KAAM,CAAC,CAAElI,QAASiR,MAtHzF,6QA+HelT,KAAKyS,iBA/HpB,+LAkIoCS,GAlIpC,iEAyIQlT,KAAKyS,gBAAgB9D,gBAAkBuE,EACvClT,KAAKoT,sBA1Ib,+LA6ImCF,GA7InC,iEAoJQlT,KAAKyS,gBAAgB7D,eAAiBsE,EACtClT,KAAKoT,sBArJb,wLAwJ4BC,EAAsBC,GAxJlD,iEAgKQtT,KAAKyS,gBAAgBlQ,YAAc8Q,EACnCrT,KAAKyS,gBAAgBrQ,YAAckR,EACnCtT,KAAKoT,sBAlKb,+QAsKcpT,KAAK0H,IAAIlG,QAAQqR,eAAe3I,IAAIlK,KAAKyS,iBAtKvD,mLA0KwB5T,GA1KxB,iFA2KcmB,KAAK0H,IAAIlG,QAAQ8G,QAAQyB,KAAK/J,KAAKgE,GAAInF,GA3KrD,uBA4KcmB,KAAK2S,cA5KnB,2LA+K+B9M,GA/K/B,wEAgLQA,EAAehH,QAAUmB,KAAKgE,GAhLtC,SAiLchE,KAAK0H,IAAIlG,QAAQgH,eAAe0B,IAAIrE,GAjLlD,uBAkLc7F,KAAK2S,cAlLnB,uIAqFQ,YAAsBlS,IAAfT,KAAKwS,QArFpB,kCAwFQ,YAAgC/R,IAAzBT,KAAK4S,oBAxFpB,8CASKjM,KATL,8GAYKA,KAZL,oGAgBKA,KAhBL,wGAsBK4M,KAtBL,gFAsLaR,GAAb,WASI,WAAY/Q,EAAiB0F,GAAW,yBARvBA,SAQsB,OANvC1D,QAMuC,OAF/BwP,sBAE+B,EACnCxT,KAAKgE,GAAKhC,EAASgC,GACnBhE,KAAK0H,IAAMA,EAXnB,oLAmBqB1H,KAAK0H,IAAI1F,SAASyR,iBAAiBrL,MAAM,CAAEpG,SAAUhC,KAAKgE,KAnB/E,wNAsBqBkP,GAtBrB,iFAuBclT,KAAK0H,IAAI1F,SAASyR,iBAAiBvJ,IAAI,CAAElI,SAAUhC,KAAKgE,GAAImG,KAAM,CAAC,CAAElI,QAASiR,MAvB5F,iLA0BqBA,GA1BrB,iFA2BclT,KAAK0H,IAAI1F,SAASyR,iBAAiBN,IAAI,CAAEnR,SAAUhC,KAAKgE,GAAImG,KAAM,CAAC,CAAElI,QAASiR,MA3B5F,8PA+BsClT,KAAK0H,IAAI1F,SAAS0R,gBAAgBjL,IAAI,CAAEzG,SAAUhC,KAAKgE,KA/B7F,gDA+BsG,CAAEhC,SAAUhC,KAAKgE,IA/BvH,OA+BQhE,KAAKwT,iBA/Bb,8IAmCQ,OAAOxT,KAAKwT,mBAnCpB,yFAsCoCN,GAtCpC,wEAuCQlT,KAAKwT,iBAAiB7E,gBAAkBuE,EAvChD,SAwCclT,KAAK2T,qBAxCnB,+LA2CmCT,GA3CnC,wEA4CQlT,KAAKwT,iBAAiB5E,eAAiBsE,EA5C/C,SA6CclT,KAAK2T,qBA7CnB,wLAgD4BN,EAAsBC,GAhDlD,wEAiDQtT,KAAKwT,iBAAiBjR,YAAc8Q,EACpCrT,KAAKwT,iBAAiBpR,YAAckR,EAlD5C,SAmDctT,KAAK2T,qBAnDnB,8QAuDc3T,KAAK0H,IAAI1F,SAAS0R,gBAAgBxJ,IAAIlK,KAAKwT,kBAvDzD,6GChLaI,GAAb,2MAGIC,YAHJ,IAKIC,wBALJ,IAMIC,qBANJ,IAOIvI,iBAPJ,IASIwF,cATJ,IAUIpB,cAVJ,IAWIqB,SAXJ,IAYIjJ,YAZJ,sEAcsCnE,GAC9B,OAAO,IAAIA,EAAK7D,QAfxB,gKAoBwCA,KAAK0H,IAAI7F,OAAOmS,YAAYzL,KAAK7C,EAAQhC,gBApBjF,cAoBQ1D,KAAK8T,mBApBb,gBAqBqC9T,KAAK0H,IAAI7F,OAAOoS,SAAS1L,KAAK7C,EAAQjC,SArB3E,OAqBQzD,KAAK+T,gBArBb,OAsBQ/T,KAAKwL,YAAc,IAAIlD,GAAQtI,KAAK0H,KACpC1H,KAAKwL,YAAYkH,QAAQ1S,KAAKb,MAE9Ba,KAAKgR,SAAWhR,KAAKkU,KAAK5M,GAC1BtH,KAAK4P,SAAW5P,KAAKkU,KAAKlC,IAC1BhS,KAAKiR,IAAMjR,KAAKkU,KAAKrH,GACrB7M,KAAKgI,OAAShI,KAAKkU,KAAK7E,IAExBrP,KAAK6T,OAAS7I,IAAI6I,SAClB7T,KAAKmU,WA/Bb,sIAkCaC,GACLpU,KAAK8H,UAAUiJ,GAAOqD,KAnC9B,0BACqB,OAAOpU,KAAKoH,SADjC,GAAyCiN,KCLnC/Q,GAAuB,CAC3BgR,QAAS,oEACTC,QAAS,QACThT,IAAKA,GAGPyJ,IAAIwJ,YAAYlR,IAEhB,IASemR,GATO,WAEpB,IAAIC,EAAS,uCAAG,sBAAAtV,EAAA,sEACRuV,YAAMf,GAAqBtQ,IADnB,2CAAH,qDAIb,OAAO,kBAAC,IAAD,CAASoR,UAAWA,KCRTE,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXJC,IAASpV,OAAO,kBAAC,GAAD,MAASqV,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.487c52bc.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { CWebUser } from './CWebUser';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page, List, LMR, FA, tv } from 'tonva';\r\n\r\nexport class VPendingAuditUserList extends VPage<CWebUser> {\r\n\r\n    async open(param?: any) {\r\n\r\n    }\r\n\r\n    render(param?: any): JSX.Element {\r\n        this.controller.getPendingUsers();\r\n        return <this.content />\r\n    }\r\n\r\n    private renderPendingUser = (item: any) => {\r\n        let { webUser } = item;\r\n        let right = <FA name=\"chevron-right\" className=\"chevron-right align-self-center\"></FA>\r\n        return <LMR right={right} className=\"p-3\">\r\n            {tv(webUser)}\r\n        </LMR>\r\n    }\r\n\r\n    private showUserDetail = async (user: any) => {\r\n        await this.controller.openPendingAuditUserDetail(user);\r\n    }\r\n\r\n    private content = observer(() => {\r\n\r\n        let { pendingUsers } = this.controller;\r\n        return <Page header=\"待审核客户\">\r\n            <List items={pendingUsers} none=\"暂无待审核客户\" item={{ render: this.renderPendingUser, onClick: this.showUserDetail }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { tv } from 'tonva';\r\n\r\nexport const tvAddress = (values: any) => {\r\n    let { country, province, city, county } = values;\r\n    return <>\r\n        {tv(country)}{tv(province, undefined, undefined, () => <></>)}{tv(city, undefined, undefined, () => <></>)}{tv(county, undefined, undefined, () => <></>)}\r\n    </>\r\n}\r\n\r\nexport const tvCountry = (values: any) => {\r\n    return <> {values.chineseName} </>;\r\n}\r\n\r\nexport const tvCurrency = (values: any) => {\r\n    return <> {values.name} </>;\r\n}\r\n\r\nexport const common = {\r\n    address: tvAddress,\r\n    country: tvCountry,\r\n    province: tvCountry,\r\n    city: tvCountry,\r\n    county: tvCountry,\r\n    currency: tvCurrency,\r\n};\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')}\r\n        style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport const tvProduct = (values: any) => {\r\n    let product = values;\r\n    let { brand, description, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n    return <div className=\"row d-flex\">\r\n        <div className=\"col-12\">\r\n            <div className=\"row py-2\">\r\n                <div className=\"col-12\"><strong>{description}</strong></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {item('CAS', CAS)}\r\n                        {item('纯度', purity)}\r\n                        {item('分子式', molecularFomula)}\r\n                        {item('分子量', molecularWeight)}\r\n                        {item('产品编号', origin)}\r\n                        {tv(brand, (values: any) => <>{item(\"品牌\", values.name)}</>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst tvPackx = (values: any) => {\r\n    let { radiox, radioy, unit } = values;\r\n    if (radiox !== 1) return <>{radiox} * {radioy}{unit}</>;\r\n    return <>{radioy}{unit}</>;\r\n}\r\n\r\nfunction item(caption: string, value: any) {\r\n    if (value === null || value === undefined) return null;\r\n    return <>\r\n        <div className=\"col-4 text-muted pr-0\">{caption}:</div>\r\n        <div className=\"col-8\">{value}</div>\r\n    </>;\r\n}\r\n\r\nexport const product = {\r\n    productx: tvProduct,\r\n    packx: tvPackx\r\n}\r\n","import { TVs } from 'tonva';\r\nimport { webuser } from './webuser';\r\nimport { common } from './common';\r\nimport { customer } from './customer';\r\nimport { product } from './product';\r\n\r\nexport const tvs: TVs = {\r\n    webuser: webuser,\r\n    common: common,\r\n    customer: customer,\r\n    product: product\r\n}","import * as React from 'react';\r\n\r\nexport const tvWebUser = (value: any) => {\r\n    let { firstName, salutation, organizationName, departmentName } = value;\r\n    return <>\r\n        <div className=\"mr-3\"><strong>{firstName}</strong> <span className=\"small\">{salutation}</span></div>\r\n        <div className=\"small text-muted\">{organizationName} &nbsp;{departmentName}</div>\r\n    </>\r\n}\r\n\r\nexport const webuser = {\r\n    webuser: tvWebUser\r\n}","import * as React from 'react';\r\nimport { tv } from 'tonva';\r\nimport { tvAddress, tvCountry } from './common';\r\n\r\nexport const tvContact = (values: any) => {\r\n    let { name, mobile, organizationName, address, addressString } = values;\r\n    return <div className=\"flex-grow-1\">\r\n        <b>\r\n            {name}\r\n        </b>\r\n        &nbsp; {mobile} &nbsp; {organizationName}<br />\r\n        <small>{tv(address)} {addressString}</small>\r\n    </div>\r\n}\r\n\r\nexport const tvInvoiceType = (values: any) => {\r\n    let { description } = values;\r\n    return <div className=\"flex-grow-1\">\r\n        {description}\r\n    </div>\r\n}\r\n\r\nexport const tvInvoiceInfo = (values: any) => {\r\n    let { title, taxNo } = values;\r\n    return <div className=\"flex-grow-1\">\r\n        <b>\r\n            {title}\r\n        </b>\r\n        &nbsp; {taxNo}\r\n    </div>\r\n}\r\n\r\nexport const customer = {\r\n    contact: tvContact,\r\n    address: tvAddress,\r\n    country: tvCountry,\r\n    province: tvCountry,\r\n    city: tvCountry,\r\n    county: tvCountry,\r\n    invoiceInfo: tvInvoiceInfo,\r\n    invoiceType: tvInvoiceType\r\n}\r\n","import { AppConfig } from 'tonva';\r\nimport { tvs } from 'tvs';\r\n\r\nexport const appConfig: AppConfig = {\r\n    appName: \"百灵威系统工程部/customer-service\",\r\n    version: \"1.0.6\",                   // 版本变化，缓存的uqs才会重载\r\n    tvs: tvs,\r\n};\r\n\r\nconst GLOABLE_PRODUCTION = {\r\n    CHINA: 44,\r\n    CHINESE: 196,\r\n    SALESREGION_CN: 1,\r\n    TIPDISPLAYTIME: 3000,\r\n}\r\n\r\nconst GLOABLE_TEST = {\r\n    CHINA: 43,\r\n    CHINESE: 197,\r\n    SALESREGION_CN: 4,\r\n    TIPDISPLAYTIME: 3000,\r\n}\r\n\r\n// export { GLOABLE_PRODUCTION as GLOABLE };\r\nexport { GLOABLE_TEST as GLOABLE };","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, UiInputItem, UiButton, Context, FA, LMR } from 'tonva';\r\nimport { CWebUser } from './CWebUser';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { GLOABLE } from 'configuration';\r\n\r\nconst schema: Schema = [\r\n    { name: 'id', type: 'id', required: false },\r\n    { name: 'customer', type: 'string', required: true },\r\n    { name: 'teacher', type: 'string', required: false },\r\n    { name: 'submit', type: 'submit' },\r\n];\r\n\r\nconst uiSchema: UiSchema = {\r\n    items: {\r\n        id: { visible: false },\r\n        customer: {\r\n            widget: 'text', label: '客户CID', placeholder: '客户CID', rules: (value) => {\r\n                return value && value.length > 30 ? 'CID过长，请检查后输入。' : undefined;\r\n            }\r\n        } as UiInputItem,\r\n        teacher: {\r\n            widget: 'text', label: '老师CID', placeholder: '老师CID', rules: (value) => {\r\n                return value && value.length > 30 ? 'CID过长，请检查后输入。' : undefined;\r\n            }\r\n        } as UiInputItem,\r\n        submit: { widget: 'button', label: '审核通过', visible: false, className: \"btn btn-primary\" } as UiButton,\r\n    }\r\n}\r\n\r\nexport class VPendingAuditUser extends VPage<CWebUser> {\r\n\r\n    private form: Form;\r\n    private data: any = {};\r\n    private pendingOrderList: JSX.Element;\r\n    @observable tips: JSX.Element;\r\n\r\n    async open(param?: any) {\r\n        let { currentAuditingUser } = this.controller;\r\n        this.pendingOrderList = await this.controller.renderPendingOrders(currentAuditingUser.id);\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private auditPendingUser = async () => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { data } = context.form;\r\n        let { customer, teacher } = data;\r\n        // 为了在界面更新后仍显示填写的内容，需要将结果保存起来\r\n        this.data.customer = customer;\r\n        this.data.teacher = teacher;\r\n\r\n        let ret = await this.controller.auditPendingUser(data);\r\n        switch (ret) {\r\n            case 1:\r\n                this.tips = <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <FA name=\"exclamation-circle\" className=\"exclamation-circle mr-2\"></FA>审核失败，必须填写客户CID!\r\n                </div>\r\n                break;\r\n            case 2:\r\n                this.tips = <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <FA name=\"exclamation-circle\" className=\"exclamation-circle mr-2\"></FA>审核失败，你填写的客户CID不存在!\r\n                </div>\r\n                break;\r\n            case 4:\r\n                this.tips = <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <FA name=\"exclamation-circle\" className=\"exclamation-circle mr-2\"></FA>审核失败，你填写的老师CID不存在!\r\n                </div>\r\n                break;\r\n            default:\r\n                let leftseconds = 3;\r\n                this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n                    <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>审核成功{leftseconds}\r\n                </div>\r\n                let h = setInterval(() => {\r\n                    leftseconds--;\r\n                    this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n                        <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>审核成功{leftseconds}\r\n                    </div>\r\n                }, 1000);\r\n                setTimeout(() => {\r\n                    clearInterval(h);\r\n                    this.backPage();\r\n                }, 3000);\r\n                break;\r\n        }\r\n        setTimeout(() => {\r\n            this.tips = undefined;\r\n        }, GLOABLE.TIPDISPLAYTIME);\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { currentAuditingUser, webUserContact, openAuditRefuse } = this.controller;\r\n        let { id, firstName, salutation, organizationName, departmentName } = currentAuditingUser;\r\n\r\n        let contactInfoUi = <div className=\"col-12 text-danger\">该用户未填写手机号、电话或Email信息</div>;\r\n        if (webUserContact) {\r\n            let { telephone, mobile, email } = webUserContact;\r\n            contactInfoUi = <>\r\n                <div className=\"col-4 text-muted\">手机:</div>\r\n                <div className=\"col-8\"><a href={`tel:${mobile}`}>{mobile}</a></div>\r\n                <div className=\"col-4 text-muted\">电话:</div>\r\n                <div className=\"col-8\"><a href={`tel:${telephone}`}>{telephone}</a></div>\r\n                <div className=\"col-4 text-muted\">Email:</div>\r\n                <div className=\"col-8\"><a href={`mailto:${email}`}>{email}</a></div>\r\n            </>;\r\n        }\r\n\r\n        this.data.id = id;\r\n        let footer = <LMR\r\n            right={<button type=\"button\"\r\n                className=\"btn btn-primary m-1\"\r\n                onClick={this.auditPendingUser}>通过</button>}\r\n            left={\r\n                <button type=\"button\"\r\n                    className=\"btn btn-outline-primary m-1\"\r\n                    onClick={openAuditRefuse}>不通过</button>}\r\n        />\r\n        return <Page header=\"待审核客户详情\" footer={footer}>\r\n            <div className=\"bg-white p-3 mt-1\">\r\n                <strong className=\"large\">{firstName}</strong> <span className=\"small text-muted\">{salutation}</span>\r\n            </div>\r\n            <div className=\"row bg-white pb-3 pl-4 pr-3\">\r\n                {contactInfoUi}\r\n                <div className=\"col-4 text-muted\">单位:</div>\r\n                <div className=\"col-8\">{organizationName}</div>\r\n                <div className=\"col-4 text-muted\">部门:</div>\r\n                <div className=\"col-8\">{departmentName}</div>\r\n            </div>\r\n            <div className=\"card my-2 p-2\">\r\n                <h5 className=\"card-title\">审核</h5>\r\n                {this.tips}\r\n                <Form ref={v => this.form = v} schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={this.data}\r\n                    className=\"bg-white px-3\"\r\n                    onButtonClick={this.onFormButtonClick}></Form>\r\n            </div>\r\n            <div className=\"card my-2 p-2\">\r\n                <h5 className=\"card-title\">未审核订单列表</h5>\r\n                {this.pendingOrderList}\r\n            </div>\r\n        </Page>\r\n    });\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Schema, UiSchema, UiInputItem, UiButton, UiRadio, Form, Context, FA } from 'tonva';\r\nimport { CWebUser } from './CWebUser';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst schema: Schema = [\r\n    { name: 'id', type: 'id', required: false },\r\n    { name: 'reason', type: 'id', required: true },\r\n    { name: 'comments', type: 'string', required: false },\r\n    { name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VPendingAuditUserRefuse extends VPage<CWebUser> {\r\n\r\n    @observable tips: JSX.Element;\r\n    async open(param: any) {\r\n        (this.uiSchema.items.reason as UiRadio).list = (param as any[]).map(v => { return { value: v.id, title: v.description } });\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n\r\n        let { data } = context.form;\r\n        this.controller.auditPendingUserRefuse(data);\r\n        let leftseconds = 3;\r\n        this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n            <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>操作成功{leftseconds}\r\n        </div>\r\n        let h = setInterval(() => {\r\n            leftseconds--;\r\n            this.tips = <div className=\"alert alert-success\" role=\"alert\">\r\n                <FA name=\"check-circle\" className=\"check-circle mr-2\"></FA>操作成功{leftseconds}\r\n            </div>\r\n        }, 1000);\r\n        setTimeout(() => {\r\n            clearInterval(h);\r\n            this.closePage(2);\r\n        }, 3000);\r\n    }\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            id: { visible: false },\r\n            reason: { widget: 'radio', label: '拒绝原因', list: [] } as UiRadio,\r\n            comments: {\r\n                widget: 'text', label: '备注', placeholder: '备注', rules: (value) => {\r\n                    return value && value.length > 100 ? '备注最多可以输入100个字。' : undefined;\r\n                }\r\n            } as UiInputItem,\r\n            submit: { widget: 'button', label: '审核不通过', visible: true, className: \"btn btn-primary w-100\" } as UiButton\r\n        }\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header='审核不通过'>\r\n            <Form schema={schema}\r\n                className=\"px-3 pb-3\"\r\n                uiSchema={this.uiSchema} onButtonClick={this.onFormButtonClick}></Form>\r\n            {this.tips}\r\n        </Page>\r\n    })\r\n}","import { CSub, CBase } from \"tonva\";\r\nimport { UQs } from \"./uqs\";\r\n\r\nexport abstract class CUqBase extends CBase {\r\n    protected get uqs(): UQs { return this._uqs as UQs }\r\n}\r\n\r\nexport abstract class CUqSub extends CSub {\r\n    protected get uqs(): UQs { return this._uqs as UQs }\r\n    protected readonly owner: CUqBase;\r\n}\r\n","import { VPendingAuditUserList } from './VPendingAuditUserList';\r\nimport { observable } from 'mobx';\r\nimport { VPendingAuditUser } from './VPendingAuditUser';\r\nimport { VPendingAuditUserRefuse } from './VPendingAuditUserRefuse';\r\nimport { CUqBase } from 'CBase';\r\n\r\nexport class CWebUser extends CUqBase {\r\n\r\n    @observable pendingUsers: any[];\r\n\r\n    currentAuditingUser: any;\r\n    webUserContact: any;\r\n\r\n    protected async internalStart() {\r\n        // this.pendingUsers = await this.uqs.webuser.getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    tab = () => this.renderView(VPendingAuditUserList);\r\n\r\n    async getPendingUsers() {\r\n        this.pendingUsers = await this.uqs.webuser.getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    async openPendingAuditUserDetail(user: any) {\r\n        let { webUser: webUserBox } = user;\r\n        let { id } = webUserBox;\r\n        this.currentAuditingUser = await this.uqs.webuser.WebUser.load(id);\r\n        this.webUserContact = await this.uqs.webuser.WebUserContact.obj({ webUser: id });\r\n        this.openVPage(VPendingAuditUser);\r\n    }\r\n\r\n    /**\r\n     * 审核通过操作\r\n     * @param data ：包含审核通过之后的内部cid\r\n     */\r\n    async auditPendingUser(data: any) {\r\n\r\n        let { customer: uqCustomer, webuser: uqWebUser } = this.uqs;\r\n        let { getCustomerByNo, getBuyerAccountByNo, getCustomerOrganization, BuyerAccount: BuyerAccountTuid } = uqCustomer;\r\n\r\n        let { id, customer: customerNo, teacher: teacherNo } = data;\r\n        if (!customerNo)\r\n            return 1;\r\n        let customerResult = await getCustomerByNo.obj({ customerNo: customerNo.trim() });\r\n        if (!customerResult)\r\n            return 2;\r\n        let { customer } = customerResult;\r\n\r\n        let buyerAccount = customer;\r\n        if (teacherNo) {\r\n            // step1:确保输入的Teacher的CID存在\r\n            let teacherBox = await getCustomerByNo.obj({ customerNo: teacherNo.trim() });\r\n            if (!teacherBox)\r\n                return 4;\r\n\r\n            let teacherBuyerAccount = await getBuyerAccountByNo.obj({ buyerAccountNo: teacherNo });\r\n            if (!teacherBuyerAccount) {\r\n                // 用内部CID的信息新建BuyerAccount\r\n                let { customer: buyerAccountInner } = teacherBox;\r\n                let { id, name, firstName, lastName, xyz, createTime } = buyerAccountInner;\r\n                let organizationBox = await getCustomerOrganization.obj({ customerId: id });\r\n                teacherBuyerAccount = await BuyerAccountTuid.save(undefined,\r\n                    {\r\n                        \"organization\": organizationBox && organizationBox.organization,\r\n                        \"description\": name, \"xyz\": xyz, \"no\": teacherNo, \"createTime\": createTime, \"isValid\": 1\r\n                    });\r\n                // 设置buyerAccount为老师的账号\r\n                buyerAccount = teacherBuyerAccount;\r\n            }\r\n        }\r\n        let { WebUserBuyerAccount, auditPendingUser, getPendingAuditUser } = uqWebUser;\r\n        // 创建WebUser和BuyerAccount的关联\r\n        await WebUserBuyerAccount.add({ webUser: id, arr1: [{ buyerAccount: buyerAccount }] });\r\n        await auditPendingUser.submit({ id: id, customerId: customer });\r\n        let { cOrder } = this.cApp;\r\n        await cOrder.auditPendingOrder(id, buyerAccount);\r\n        // 刷新列表\r\n        this.pendingUsers = await getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    /**\r\n     * 打开审核不通过界面\r\n     */\r\n    openAuditRefuse = async () => {\r\n\r\n        let reasons = await this.uqs.webuser.AuditPendingUserRefuseReason.search(undefined, 0, 100);\r\n        this.openVPage(VPendingAuditUserRefuse, reasons);\r\n        //await this.controller.auditPendingUserRefuse(this.data.id);\r\n    }\r\n\r\n    /**\r\n     * 审核不通过操作\r\n     * @param reasonData\r\n     */\r\n    async auditPendingUserRefuse(reasonData: any) {\r\n        let { reason, comments } = reasonData;\r\n        let { id: currentAuditingUserId } = this.currentAuditingUser;\r\n        await this.uqs.webuser.auditPendingUserRefuse.submit({ id: currentAuditingUserId, reason: reason, comments: comments });\r\n        /*\r\n        let { cOrder } = this.cApp;\r\n        await cOrder.cancelPendingOrder(currentAuditingUserId);\r\n        */\r\n        this.pendingUsers = await this.uqs.webuser.getPendingAuditUser.table(undefined);\r\n    }\r\n\r\n    /**\r\n     * 显示待审核客户的未审核订单\r\n     */\r\n    renderPendingOrders = async (webUserId: bigint) => {\r\n        let { cOrder } = this.cApp;\r\n        return await cOrder.renderPendingOrder(webUserId);\r\n    }\r\n}","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport {\r\n    userApi, ItemSchema, StringSchema, ImageSchema, UiTextItem, UiImageItem, nav, Page,\r\n    Edit, UiSchema,\r\n    VPage, UiRadio, IdSchema, UiIdItem, Context, BoxId, tv\r\n} from 'tonva';\r\nimport { CMe } from './CMe';\r\nimport {\r\n    faxValidation, emailValidation, mobileValidation, telephoneValidation,\r\n    addressDetailValidation, zipCodeValidation,\r\n    organizationNameValidation, departmentNameValidation,\r\n    salutationValidation, nameValidation\r\n} from '../tools/inputValidations';\r\n\r\nexport class EditMeInfo extends VPage<CMe>{\r\n\r\n    async open(param: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private schema: ItemSchema[] = [\r\n        { name: 'nick', type: 'string' } as StringSchema,\r\n        { name: 'icon', type: 'image' } as ImageSchema,\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            nick: { widget: 'text', label: '别名', placeholder: '好的别名更方便记忆' } as UiTextItem,\r\n            icon: { widget: 'image', label: '头像' } as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data: any;\r\n\r\n    @observable private webUserData: any;\r\n\r\n    @observable private webUserContactData: any;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        let { nick, icon } = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        };\r\n\r\n        let { cApp } = this.controller;\r\n        let { firstName, gender, salutation, organizationName, departmentName, telephone\r\n            , mobile, email, fax, zipCode, address, addressString } = cApp.currentUser;\r\n        this.webUserData = {\r\n            firstName: firstName,\r\n            gender: gender,\r\n            salutation: salutation,\r\n            organizationName: organizationName,\r\n            departmentName: departmentName,\r\n        };\r\n\r\n        this.webUserContactData = {\r\n            telephone: telephone,\r\n            mobile: mobile,\r\n            email: email,\r\n            fax: fax,\r\n            address: address,\r\n            addressString: addressString,\r\n            zipCode: zipCode,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    private onWebUserChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        this.webUserData[name] = newValue;\r\n        await this.controller.changeWebUser(this.webUserData);\r\n    }\r\n\r\n    private onWebUserContactChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        this.webUserContactData[name] = newValue;\r\n        await this.controller.changeWebUserContact(this.webUserContactData);\r\n    }\r\n\r\n    private page = () => {\r\n        let { schema, uiSchema, data, onItemChanged } = this;\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={schema} uiSchema={uiSchema}\r\n                data={data}\r\n                onItemChanged={onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport const webUserSchema: ItemSchema[] = [\r\n    { name: 'firstName', type: 'string', required: true } as StringSchema,\r\n    { name: 'gender', type: 'string' } as StringSchema,\r\n    { name: 'salutation', type: 'string' } as StringSchema,\r\n    { name: 'organizationName', type: 'string', required: true } as StringSchema,\r\n    { name: 'departmentName', type: 'string' } as StringSchema,\r\n];\r\n\r\nexport const webUserUiSchema: UiSchema = {\r\n    items: {\r\n        firstName: {\r\n            widget: 'text', label: '真实姓名',\r\n            placeholder: '化学品是受国家安全法规限制的特殊商品，百灵威提供技术咨询、资料以及化学产品的对象必须是具有化学管理和应用能力的专业单位（非个人）。为此，需要您重新提供非虚拟的、可核查的信息。',\r\n            rules: nameValidation\r\n        } as UiTextItem,\r\n        gender: { widget: 'radio', label: '性别', list: [{ value: '1', title: '男' }, { value: '0', title: '女' }] } as UiRadio,\r\n        salutation: { widget: 'text', label: '称谓', rules: salutationValidation } as UiTextItem,\r\n        organizationName: { widget: 'text', label: '单位名称', rules: organizationNameValidation } as UiTextItem,\r\n        departmentName: { widget: 'text', label: '部门名称', rules: departmentNameValidation } as UiTextItem,\r\n    }\r\n}\r\n\r\n// 个人联系方式信息\r\nexport const webUserContactSchema: ItemSchema[] = [\r\n    { name: 'telephone', type: 'string' } as StringSchema,\r\n    { name: 'mobile', type: 'string', required: true } as StringSchema,\r\n    { name: 'email', type: 'string' } as StringSchema,\r\n    { name: 'fax', type: 'string', required: false } as StringSchema,\r\n    { name: 'address', type: 'id', required: false } as IdSchema,\r\n    { name: 'addressString', type: 'string', required: false } as StringSchema,\r\n    { name: 'zipCode', type: 'string', required: false } as StringSchema,\r\n];\r\n\r\nexport function webUserContactUiSchema(pickAddress: any) {\r\n    return {\r\n        items: {\r\n            telephone: { widget: 'text', label: '固定电话', rules: telephoneValidation } as UiTextItem,\r\n            mobile: { widget: 'text', label: '手机号', rules: mobileValidation } as UiTextItem,\r\n            email: { widget: 'text', label: 'Email', rules: emailValidation, placeholder: 'Email' } as UiTextItem,\r\n            fax: { widget: 'text', label: '传真', rules: faxValidation } as UiTextItem,\r\n            address: {\r\n                widget: 'id', label: '所在地区',\r\n                pickId: async (context: Context, name: string, value: number) => await pickAddress(context, name, value),\r\n                Templet: (address: BoxId) => {\r\n                    return tv(address, (addressValue) => {\r\n                        let { country, province, city, county } = addressValue;\r\n                        /* 下面这种在使用tv之前的一堆判断应该是tv或者什么的有bug, 应该让Henry改改 */\r\n                        return <>\r\n                            {country !== undefined && country.id !== undefined && tv(country, v => <>{v.chineseName}</>)}\r\n                            {province !== undefined && province.id !== undefined && tv(province, (v) => <>{v.chineseName}</>)}\r\n                            {city !== undefined && city.id !== undefined && tv(city, (v) => <>{v.chineseName}</>)}\r\n                            {county !== undefined && county.id !== undefined && tv(county, (v) => <>{v.chineseName}</>)}\r\n                        </>;\r\n                    }, () => {\r\n                        return <small className=\"text-muted\">请选择地区</small>;\r\n                    })\r\n                }\r\n            } as UiIdItem,\r\n            addressString: { widget: 'text', label: '详细地址', rules: addressDetailValidation } as UiTextItem,\r\n            zipCode: { widget: 'text', label: '邮编', rules: zipCodeValidation } as UiTextItem,\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page, Image, VPage } from 'tonva';\r\nimport { Prop, IconText, FA, PropGrid, LMR } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { EditMeInfo } from './EditMeInfo';\r\nimport { CMe } from './CMe';\r\nimport { appConfig } from 'configuration';\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(param?: any) {\r\n\r\n    }\r\n\r\n    private exit() {\r\n        nav.showLogout();\r\n    }\r\n\r\n    private changePassword = async () => {\r\n        await nav.changePassword();\r\n    }\r\n\r\n    private meInfo = observer(() => {\r\n        let { user } = nav;\r\n        if (user === undefined) return null;\r\n        let { id, name, nick, icon } = user;\r\n        return <LMR className=\"py-2 cursor-pointer w-100\"\r\n            left={<Image className=\"w-3c h-3c mr-3\" src={icon} />}\r\n            right={<FA className=\"align-self-end\" name=\"angle-right\" />}\r\n            onClick={() => {\r\n                this.openVPage(EditMeInfo);\r\n            }}>\r\n            <div>\r\n                <div>{userSpan(name, nick)}</div>\r\n                <div className=\"small\"><span className=\"text-muted\">ID:</span> {id > 10000 ? id : String(id + 10000).substr(1)}</div>\r\n            </div>\r\n        </LMR>;\r\n    });\r\n\r\n    render() {\r\n        const { user } = nav;\r\n        let aboutRows: Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"w-100 d-flex justify-content-between\">\r\n                    <IconText iconClass=\"text-info mr-2\" icon=\"smile-o\" text=\"关于本APP\" />\r\n                    <div className=\"py-2 small\">V{appConfig.version}</div>\r\n                </div>,\r\n            },\r\n            ''\r\n        ];\r\n\r\n        let rows: Prop[];\r\n        if (user === undefined) {\r\n            rows = aboutRows;\r\n            rows.push(\r\n                {\r\n                    type: 'component',\r\n                    component: <button className=\"btn btn-success w-100 my-2\" onClick={() => nav.showLogin(undefined, true)}>\r\n                        <FA name=\"sign-out\" size=\"lg\" /> 请登录\r\n                    </button>\r\n                },\r\n            );\r\n        }\r\n        else {\r\n            let logOutRows: Prop[] = [\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    bk: '',\r\n                    component: <button className=\"btn btn-danger w-100\" onClick={this.exit}>\r\n                        <FA name=\"sign-out\" size=\"lg\" /> 退出登录\r\n                </button>\r\n                },\r\n            ];\r\n\r\n            rows = [\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <this.meInfo />\r\n                },\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <IconText iconClass=\"text-info mr-2\" icon=\"key\" text=\"修改密码\" />,\r\n                    onClick: this.changePassword\r\n                },\r\n            ]\r\n            rows.push(...aboutRows, ...logOutRows);\r\n        }\r\n        return <Page header=\"我的\">\r\n            <PropGrid rows={[...rows]} values={{}} />;\r\n        </Page>\r\n    }\r\n}\r\n\r\n\r\nfunction userSpan(name: string, nick: string): JSX.Element {\r\n    return nick ?\r\n        <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n        : <b>{name}</b>\r\n}","import { CUqBase } from '../CBase';\r\nimport { VMe } from './VMe';\r\n\r\nexport class CMe extends CUqBase {\r\n    protected async internalStart() {\r\n\r\n    }\r\n\r\n    async changeWebUser(webUser: any) {\r\n        let { currentUser } = this.cApp;\r\n        await currentUser.changeWebUser(webUser);\r\n    }\r\n\r\n    async changeWebUserContact(webUserContact: any) {\r\n        let { currentUser } = this.cApp;\r\n        await currentUser.changeWebUserContact(webUserContact);\r\n    }\r\n\r\n    tab = () => this.renderView(VMe);\r\n}","import * as React from 'react';\r\nimport { View, List, EasyDate } from 'tonva';\r\nimport { COrder } from './COrder';\r\n\r\nexport class VPendingOrderList extends View<COrder> {\r\n\r\n    private renderOrder = (order: any, index: number) => {\r\n        let { openOrderDetail } = this.controller;\r\n        let { id, no, date } = order;\r\n        return <div className=\"m-3 justify-content-between cursor-pointer\" onClick={() => openOrderDetail(id)}>\r\n            <div><span className=\"small text-muted\">订单编号: </span><strong>{no}</strong></div>\r\n            <div className=\"small text-muted\"><EasyDate date={date} /></div>\r\n        </div>;\r\n    }\r\n\r\n    render(pendingOrders?: any): JSX.Element {\r\n        return <List items={pendingOrders} item={{ render: this.renderOrder }} none='无未审核订单'></List>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, BoxId } from 'tonva';\r\nimport { COrder } from './COrder';\r\nimport { tv } from 'tonva';\r\nimport { List } from 'tonva';\r\n\r\nexport class VOrderDetail extends VPage<COrder> {\r\n\r\n    async open(order: any) {\r\n        this.openPage(this.page, order);\r\n    }\r\n\r\n    private packsRow = (item: any, index: number) => {\r\n        let { pack, quantity, price } = item;\r\n\r\n        return <div key={index} className=\"px-2 py-2 border-top\">\r\n            <div className=\"d-flex align-items-center\">\r\n                <div className=\"flex-grow-1\"><b>{tv(pack)}</b></div>\r\n                <div className=\"w-12c mr-4 text-right\">\r\n                    <span className=\"text-danger h5\"><small>¥</small>{parseFloat((price * quantity).toFixed(2))}</span>\r\n                    <small className=\"text-muted\">(¥{parseFloat(price.toFixed(2))} × {quantity})</small>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private renderOrderItem = (orderItem: any) => {\r\n        let { product, packs } = orderItem;\r\n        let { controller, packsRow } = this;\r\n        return <div>\r\n            <div className=\"row p-1 my-1\">\r\n                <div className=\"col-lg-6 pb-3\">{controller.renderOrderItemProduct(product)}</div>\r\n                <div className=\"col-lg-6\">{\r\n                    packs.map((p, index) => {\r\n                        return packsRow(p, index);\r\n                    })\r\n                }</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = (order: any) => {\r\n\r\n        let { brief, data } = order;\r\n        let { no } = brief;\r\n        let { orderItems, currency, shippingContact, invoiceContact, invoiceType, invoiceInfo, amount, couponOffsetAmount, couponRemitted\r\n            , freightFee, freightFeeRemitted } = data;\r\n        let couponUI;\r\n        if (couponOffsetAmount || couponRemitted) {\r\n            let offsetUI, remittedUI;\r\n            if (couponOffsetAmount) {\r\n                offsetUI = <div className=\"d-flex flex-row justify-content-between\">\r\n                    <div className=\"text-muted\">折扣:</div>\r\n                    <div className=\"text-right text-danger\"><small>¥</small>{couponOffsetAmount}</div>\r\n                </div>\r\n            }\r\n            if (couponRemitted) {\r\n                remittedUI = <div className=\"d-flex flex-row justify-content-between\">\r\n                    <div className=\"text-muted\">抵扣:</div>\r\n                    <div className=\"text-right text-danger\"><small>¥</small>{couponRemitted}</div>\r\n                </div>\r\n            }\r\n            couponUI = <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">优惠券:</div>\r\n                <div className=\"col-9\">\r\n                    {offsetUI}\r\n                    {remittedUI}\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        let freightFeeUI, freightFeeRemittedUI;\r\n        if (freightFee) {\r\n            freightFeeUI = <>\r\n                <div className=\"text-right text-danger\"><small>¥</small>{freightFee}</div>\r\n            </>\r\n            if (freightFeeRemitted) {\r\n                freightFeeRemittedUI = <>\r\n                    <div className=\"text-right text-danger\"><small>¥</small>{freightFeeRemitted}(减免)</div>\r\n                </>\r\n            }\r\n        }\r\n\r\n        let header = <>订单详情: {no}</>\r\n        return <Page header={header}>\r\n            <List items={orderItems} item={{ render: this.renderOrderItem }} />\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">收货地址:</div>\r\n                <div className=\"col-9\">{tv(shippingContact)}</div>\r\n            </div>\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">发票地址:</div>\r\n                <div className=\"col-9\">{tv(invoiceContact)}</div>\r\n            </div>\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">发票信息:</div>\r\n                <div className=\"col-9\">{invoiceTemplate(invoiceType, invoiceInfo)}</div>\r\n            </div>\r\n            <div className=\"bg-white row no-gutters p-3 my-1\">\r\n                <div className=\"col-3 text-muted\">运费:</div>\r\n                <div className=\"col-9\">{freightFeeUI}{freightFeeRemittedUI}</div>\r\n            </div>\r\n            {couponUI}\r\n            <div className=\"bg-white p-3 my-1 text-right\">\r\n                <span className=\"text-danger font-weight-bold\">总金额: {amount}{tv(currency)}</span>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\nfunction invoiceTemplate(invoiceType: BoxId, invoiceInfo: BoxId): JSX.Element {\r\n    return <>\r\n        {tv(invoiceType, invoiceTypeUI, undefined, () => <></>)}<br />\r\n        {tv(invoiceInfo, invoiceInfoUI, undefined, () => <></>)}\r\n    </>\r\n}\r\n\r\nfunction invoiceTypeUI(values: any) {\r\n    let { description } = values;\r\n    return <>{description}</>;\r\n}\r\n\r\nfunction invoiceInfoUI(values: any) {\r\n    let { title } = values;\r\n    return <>{title}</>;\r\n}","import { VPendingOrderList } from './VPendingOrderList';\r\nimport { VOrderDetail } from './VOrderDetail';\r\nimport { CUqBase } from 'CBase';\r\nimport { BoxId } from 'tonva';\r\n\r\nexport class COrder extends CUqBase {\r\n\r\n    async internalStart(param: any) {\r\n    }\r\n\r\n    async renderPendingOrder(webUserId: number) {\r\n        // let pendingAuditOrders = await this.uqs.order.GetPendingAuditOrders.table({ webUser: webUserId });\r\n        let pendingAuditOrders = await this.uqs.order.Order.userSheets(\"matching\", webUserId, 0, 100);\r\n        return this.renderView(VPendingOrderList, pendingAuditOrders);\r\n    }\r\n\r\n    async auditPendingOrder(webUserId: number, buyAccount: BoxId) {\r\n        let { Order: OrderSheet, OrderBuyerAccount } = this.uqs.order;\r\n        // let pendingAuditOrders = await this.uqs.order.GetPendingAuditOrders.table({ webUser: webUserId });\r\n        let pendingAuditOrders = await OrderSheet.userSheets(\"matching\", webUserId, 0, 100);\r\n        for (let i = 0; i < pendingAuditOrders.length; i++) {\r\n            let order = pendingAuditOrders[i];\r\n            let { id, flow } = order;\r\n            // 建立map\r\n            await OrderBuyerAccount.add({ order: order, arr1: [{ buyerAccount: buyAccount }] })\r\n            await OrderSheet.action(id, flow, 'matching', \"Pass\");\r\n        }\r\n    }\r\n\r\n    /*\r\n    async cancelPendingOrder(webUserId: bigint) {\r\n        let pendingAuditOrders = await this.uqs.order.GetPendingAuditOrders.table({ webUser: webUserId });\r\n        for (let i = 0; i < pendingAuditOrders.length; i++) {\r\n            let order = pendingAuditOrders[i];\r\n            let { id, flow, state } = order;\r\n            await this.uqs.order.Order.action(id, flow, state, \"Cancel\");\r\n        }\r\n    }\r\n    */\r\n\r\n    openOrderDetail = async (orderId: number) => {\r\n\r\n        let order = await this.uqs.order.Order.getSheet(orderId);\r\n        let { data } = order;\r\n        let { orderitems } = data;\r\n        let orderItemsGrouped = orderItemGroupByProduct(orderitems);\r\n        data.orderItems = orderItemsGrouped;\r\n        this.openVPage(VOrderDetail, order);\r\n    }\r\n\r\n    renderOrderItemProduct = (product: BoxId) => {\r\n        let { cProduct } = this.cApp;\r\n        return cProduct.renderCartProduct(product);\r\n    }\r\n}\r\n\r\nexport function orderItemGroupByProduct(packItems: any[]) {\r\n    let result: any[] = [];\r\n    for (let cd of packItems) {\r\n        let { product, pack, quantity, price, currency } = cd;\r\n        let cpi = result.find(e => e.product.id === product.id);\r\n        if (cpi === undefined) {\r\n            cpi = { product: product, packs: [] };\r\n            result.push(cpi);\r\n        }\r\n        let packRow: any = {\r\n            pack: pack,\r\n            price: price,\r\n            quantity: quantity,\r\n            currency: currency && currency.id\r\n        }\r\n        cpi.packs.push(packRow);\r\n    }\r\n    return result;\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CCustomerServiceApp } from 'CCustomerServiceApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VMain extends VPage<CCustomerServiceApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n    render = (param?: any): JSX.Element => {\r\n        let { cWebUser, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '首页', icon: 'home', content: cWebUser.tab, notify: undefined/*store.homeCount*/ },\r\n            { name: 'me', label: '我的', icon: 'user', content: cMe.tab }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { View, tv } from 'tonva';\r\nimport { CProduct, productPropItem, renderBrand } from './CProduct';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VCartProuductView extends View<CProduct> {\r\n\r\n    render(param: any): JSX.Element {\r\n        return <>{tv(param, this.renderCartProduct)}</>;\r\n    }\r\n\r\n\r\n    private renderCartProduct = (product: any) => {\r\n        let { brand, description, descriptionC, origin, imageUrl } = product;\r\n\r\n        return <div className=\"row d-flex mb-3 px-2\">\r\n            <div className=\"col-12\">\r\n                <div className=\"py-2\">\r\n                    <strong>{description}</strong>\r\n                </div>\r\n                <div className=\"pb-2\">\r\n                    <strong>{descriptionC}</strong>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <ProductImage chemicalId={imageUrl} className=\"w-4c h-4c\" />\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <div className=\"row\">\r\n                            {this.controller.renderChemicalInfo(product)}\r\n                            {productPropItem('编号', origin)}\r\n                            {tv(brand, renderBrand)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VProuductView extends View<CProduct> {\r\n\r\n    render(param: any): JSX.Element {\r\n        return <>{tv(param, this.renderProduct)}</>;\r\n    }\r\n\r\n    private renderProduct = (product: any) => {\r\n        let { brand, description, descriptionC, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-3\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {productPropItem('产品编号', origin)}\r\n                        {tv(brand, renderBrand)}\r\n                        {this.controller.renderChemicalInfo(product)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CProduct, productPropItem } from './CProduct';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VChemicalInfo extends View<CProduct> {\r\n\r\n    render(param: any): JSX.Element {\r\n        let { id: productId } = param;\r\n        let { controller } = this;\r\n        controller.getChemicalInfo(productId);\r\n        return <this.content productId={productId} />;\r\n    }\r\n\r\n    private content = observer((param: any) => {\r\n\r\n        let { productId } = param;\r\n        let { chemicalInfoContainer } = this.controller;\r\n        let chemicalInfo = chemicalInfoContainer[productId];\r\n        if (chemicalInfo !== undefined) {\r\n            let { purity, CAS } = chemicalInfo;\r\n            return <>\r\n                {productPropItem('CAS', CAS)}\r\n                {productPropItem('纯度', purity)}\r\n            </>\r\n        }\r\n        return <></>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { tv, BoxId } from 'tonva';\r\nimport classNames from 'classnames';\r\nimport { CUqBase } from '../CBase';\r\nimport { ProductImage } from '../tools/productImage';\r\nimport { VCartProuductView } from './VProductView';\r\nimport { VChemicalInfo } from './VChemicalInfo';\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends CUqBase {\r\n    @observable chemicalInfoContainer: { [productId: number]: any } = {};\r\n\r\n    protected async internalStart(param: any) {\r\n    }\r\n\r\n    renderChemicalInfo = (product: BoxId) => {\r\n        return this.renderView(VChemicalInfo, product);\r\n    }\r\n\r\n    getChemicalInfo = async (productId: number) => {\r\n        if (this.chemicalInfoContainer[productId] === undefined) {\r\n            this.chemicalInfoContainer[productId] = await this.uqs.product.ProductChemical.obj({ product: productId });\r\n        }\r\n    }\r\n\r\n    renderCartProduct = (product: BoxId) => {\r\n        return this.renderView(VCartProuductView, product);\r\n    }\r\n}\r\n\r\nexport function renderBrand(brand: any) {\r\n    return productPropItem('品牌', brand.name);\r\n}\r\n\r\nexport function productPropItem(caption: string, value: any, captionClass?: string) {\r\n    if (value === null || value === undefined || value === '0') return null;\r\n    let capClass = captionClass ? classNames(captionClass) : classNames(\"text-muted\");\r\n    let valClass = captionClass ? classNames(captionClass) : \"\";\r\n    return <>\r\n        <div className={classNames(\"col-6 col-sm-2 pr-0 small\", capClass)}> {caption}</div>\r\n        <div className={classNames(\"col-6 col-sm-4\", valClass)}>{value}</div>\r\n    </>;\r\n}\r\n\r\nexport function renderProduct(product: any) {\r\n    let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n    return <div className=\"d-block mb-4 px-3\">\r\n        <div className=\"py-2\">\r\n            <div><strong>{description}</strong></div>\r\n            <div>{descriptionC}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-3\">\r\n                <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n            </div>\r\n            <div className=\"col-9\">\r\n                <div className=\"row\">\r\n                    {productPropItem('CAS', CAS)}\r\n                    {productPropItem('产品编号', origin)}\r\n                    {productPropItem('纯度', purity)}\r\n                    {productPropItem('分子式', molecularFomula)}\r\n                    {productPropItem('分子量', molecularWeight)}\r\n                    {tv(brand, renderBrand)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import { User } from 'tonva';\r\nimport { BoxId } from 'tonva';\r\nimport { observable, computed } from 'mobx';\r\nimport { UQs } from './uqs';\r\n\r\nexport class WebUser {\r\n\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n    guest: number;\r\n    token: string;\r\n\r\n    @observable firstName: string;\r\n    gender: string;\r\n    salutation: string;\r\n    @observable organizationName: string;\r\n    departmentName: string;\r\n\r\n    telephone: string;\r\n    @observable mobile: string;\r\n    email: string;\r\n    fax: string;\r\n    address: BoxId;\r\n    addressString: string;\r\n    zipCode: string;\r\n    @computed get allowOrdering() {\r\n        return this.currentCustomer !== undefined ||\r\n            (this.mobile && this.firstName && this.organizationName);\r\n    }\r\n\r\n    private _user: User;\r\n\r\n    private webUserSettings: any;\r\n\r\n    private uqs: UQs;\r\n\r\n\r\n    constructor(uqs: UQs) {// cUsqWebUser: CUq, cUsqCustomer: CUq) {\r\n        this.uqs = uqs;\r\n    }\r\n\r\n    setUser = async (user: User) => {\r\n        if (user !== undefined) {\r\n            this._user = user;\r\n            this.id = user.id;\r\n            this.name = user.name;\r\n            this.nick = user.nick;\r\n            this.icon = user.icon;\r\n            this.guest = user.guest;\r\n            this.token = user.token;\r\n\r\n            await this.loadWebUser();\r\n        }\r\n    }\r\n\r\n    private async loadWebUser() {\r\n        let { id, _user } = this;\r\n        if (_user !== undefined) {\r\n            let webUser = await this.uqs.webuser.WebUser.load(id);\r\n            if (webUser) {\r\n                let { firstName, gender, salutation, organizationName, departmentName } = webUser;\r\n                this.firstName = firstName;\r\n                this.gender = gender;\r\n                this.salutation = salutation;\r\n                this.organizationName = organizationName;\r\n                this.departmentName = departmentName;\r\n            }\r\n            let contact = await this.uqs.webuser.WebUserContact.obj({ webUser: this.id });\r\n            if (contact) {\r\n                let { telephone, mobile, email, fax, address, addressString, zipCode } = contact;\r\n                this.telephone = telephone;\r\n                this.mobile = mobile;\r\n                this.email = email;\r\n                this.fax = fax;\r\n                this.address = address;\r\n                this.addressString = addressString;\r\n                this.zipCode = zipCode;\r\n            }\r\n            this.webUserSettings = await this.uqs.webuser.WebUserSetting.obj({ webUser: this.id }) || { webUser: this.id };\r\n            let value = await this.uqs.webuser.WebUserCustomer.obj({ webUser: this.id });\r\n            if (value !== undefined) {\r\n                this.currentCustomer = new Customer(value.customer, this.uqs);\r\n                await this.currentCustomer.init();\r\n            }\r\n        }\r\n    }\r\n\r\n    get isLogined(): boolean {\r\n        return this._user !== undefined;\r\n    }\r\n    get hasCustomer(): boolean {\r\n        return this.currentCustomer !== undefined;\r\n    }\r\n    currentCustomer: Customer;\r\n\r\n    async getContacts(): Promise<any[]> {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            return await this.currentCustomer.getContacts()\r\n        }\r\n        */\r\n        return await this.uqs.webuser.WebUserContacts.table({ webUser: this.id });\r\n    }\r\n\r\n    async addContact(contactId: number) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.addContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        await this.uqs.webuser.WebUserContacts.add({ webUser: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async delContact(contactId: number) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.delContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        await this.uqs.webuser.WebUserContacts.del({ webUser: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async getSetting() {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            return this.currentCustomer.getSetting();\r\n        }\r\n        */\r\n        return this.webUserSettings;\r\n    }\r\n\r\n    async setDefaultShippingContact(contactId: BoxId) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.setDefaultShippingContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        this.webUserSettings.shippingContact = contactId;\r\n        this.saveDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoiceContact(contactId: BoxId) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.setDefaultInvoiceContact(contactId);\r\n            return;\r\n        }\r\n        */\r\n        this.webUserSettings.invoiceContact = contactId;\r\n        this.saveDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoice(invoiceTypeId: BoxId, invoiceInfoId: BoxId) {\r\n        /*\r\n        if (this.currentCustomer !== undefined) {\r\n            await this.currentCustomer.setDefaultInvoice(invoiceTypeId, invoiceInfoId);\r\n            return;\r\n        }\r\n        */\r\n        // await this.webUserSettingMap.add({ webUser: this.id, arr1: [{ invoiceType: invoiceTypeId, invoiceInfo: invoiceInfoId }] });\r\n        this.webUserSettings.invoiceType = invoiceTypeId;\r\n        this.webUserSettings.invoiceInfo = invoiceInfoId;\r\n        this.saveDefaultSettings();\r\n    }\r\n\r\n    async saveDefaultSettings() {\r\n        await this.uqs.webuser.WebUserSetting.add(this.webUserSettings);\r\n    }\r\n\r\n\r\n    async changeWebUser(webUser: any) {\r\n        await this.uqs.webuser.WebUser.save(this.id, webUser);\r\n        await this.loadWebUser();\r\n    }\r\n\r\n    async changeWebUserContact(webUserContact: any) {\r\n        webUserContact.webUser = this.id;\r\n        await this.uqs.webuser.WebUserContact.add(webUserContact);\r\n        await this.loadWebUser();\r\n    }\r\n};\r\n\r\nexport class Customer {\r\n    private readonly uqs: UQs;\r\n    //private contactMap: Map;\r\n    id: number;\r\n\r\n    //private customerSettingMap: Map;\r\n\r\n    private customerSettings: any;\r\n\r\n    constructor(customer: BoxId, uqs: UQs) {\r\n        this.id = customer.id;\r\n        this.uqs = uqs;\r\n        /*\r\n        this.contactMap = cUsqCustomer.map('customerContacts');\r\n        this.customerSettingMap = cUsqCustomer.map('customerSetting');\r\n        */\r\n    };\r\n\r\n    async getContacts(): Promise<any[]> {\r\n        return await this.uqs.customer.CustomerContacts.table({ customer: this.id });\r\n    }\r\n\r\n    async addContact(contactId: number) {\r\n        await this.uqs.customer.CustomerContacts.add({ customer: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async delContact(contactId: number) {\r\n        await this.uqs.customer.CustomerContacts.del({ customer: this.id, arr1: [{ contact: contactId }] });\r\n    }\r\n\r\n    async init() {\r\n        this.customerSettings = await this.uqs.customer.CustomerSetting.obj({ customer: this.id }) || { customer: this.id };\r\n    }\r\n\r\n    getSetting() {\r\n        return this.customerSettings;\r\n    }\r\n\r\n    async setDefaultShippingContact(contactId: BoxId) {\r\n        this.customerSettings.shippingContact = contactId;\r\n        await this.setDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoiceContact(contactId: BoxId) {\r\n        this.customerSettings.invoiceContact = contactId;\r\n        await this.setDefaultSettings();\r\n    }\r\n\r\n    async setDefaultInvoice(invoiceTypeId: BoxId, invoiceInfoId: BoxId) {\r\n        this.customerSettings.invoiceType = invoiceTypeId;\r\n        this.customerSettings.invoiceInfo = invoiceInfoId;\r\n        await this.setDefaultSettings();\r\n    }\r\n\r\n    async setDefaultSettings() {\r\n        await this.uqs.customer.CustomerSetting.add(this.customerSettings);\r\n    }\r\n}","import { nav, CAppBase, IConstructor } from 'tonva';\r\nimport { CWebUser } from 'webUser/CWebUser';\r\nimport { CMe } from 'me/CMe';\r\nimport { COrder } from 'order/COrder';\r\nimport { UQs } from 'uqs';\r\nimport { VMain } from 'VMain';\r\nimport { CUqBase } from 'CBase';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { WebUser } from 'currentUser';\r\nimport { GLOABLE } from 'configuration';\r\n\r\nexport class CCustomerServiceApp extends CAppBase {\r\n    get uqs(): UQs { return this._uqs as UQs; }\r\n\r\n    topKey: any;\r\n\r\n    currentSalesRegion: any;\r\n    currentLanguage: any;\r\n    currentUser: WebUser;\r\n\r\n    cWebUser: CWebUser;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n    cOrder: COrder;\r\n\r\n    protected newC<T extends CUqBase>(type: IConstructor<T>): T {\r\n        return new type(this);\r\n    }\r\n\r\n    protected async internalStart() {\r\n\r\n        this.currentSalesRegion = await this.uqs.common.SalesRegion.load(GLOABLE.SALESREGION_CN);\r\n        this.currentLanguage = await this.uqs.common.Language.load(GLOABLE.CHINESE);\r\n        this.currentUser = new WebUser(this.uqs);\r\n        this.currentUser.setUser(this.user);\r\n\r\n        this.cWebUser = this.newC(CWebUser);\r\n        this.cProduct = this.newC(CProduct);\r\n        this.cMe = this.newC(CMe);\r\n        this.cOrder = this.newC(COrder);\r\n\r\n        this.topKey = nav.topKey();\r\n        this.showMain();\r\n    }\r\n\r\n    showMain(initTabName?: string) {\r\n        this.openVPage(VMain, initTabName);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { NavView, AppConfig, start, nav } from 'tonva';\r\nimport { CCustomerServiceApp } from 'CCustomerServiceApp';\r\nimport { tvs } from 'tvs';\r\n\r\nconst appConfig: AppConfig = {\r\n  appName: \"百灵威系统工程部/customer-service\",\r\n  version: \"1.0.3\",                   // 版本变化，缓存的uqs才会重载\r\n  tvs: tvs,\r\n};\r\n\r\nnav.setSettings(appConfig);\r\n\r\nconst App: React.FC = () => {\r\n\r\n  let onLogined = async () => {\r\n    await start(CCustomerServiceApp, appConfig);\r\n  }\r\n\r\n  return <NavView onLogined={onLogined} />;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}